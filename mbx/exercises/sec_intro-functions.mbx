<section xml:id="sec_intro-functions">
  <title>Functions</title>


  <introduction>
    <p>
      A
      <term>function</term><index><main>function</main></index> is a rule that assigns each input exactly one output.  We call the output the <term>image</term> of the input.  The set of all inputs for a function is called the
      <term>domain</term><index><main>domain</main></index>. The set of all allowable outputs is called the
      <term>codomain</term><index><main>codomain</main></index>. We would write <m>f:X \to Y</m> to describe a function with name <m>f</m>, domain <m>X</m> and codomain <m>Y</m>. This does not tell us <em>which</em> function <m>f</m> is though. To define the function, we must describe the rule. This is often done by giving a formula to compute the output for any input (although this is certainly not the only way to describe the rule). </p>

    <p> For example, consider the function <m>f:\N \to \N</m> defined by <m>f(x) = x^2 + 3</m>. Here the domain and codomain are the same set (the natural numbers). The rule is: take your input, multiply it by itself and add 3. This works because we can apply this rule to every natural number (every element of the domain) and the result is always a natural number (an element of the codomain). Notice though that not every natural number actually is an output (there is no way to get 0, 1, 2, 5, etc.). The set of natural numbers that are <em>actually outputs</em> is called the
      <term>range</term><index><main>range</main></index> of the function (in this case, the range is <m>\{3, 4, 7, 12, 19, 28, \ldots\}</m>, all the natural numbers that are 3 more than a perfect square).
    </p>

    <p>
      The key thing that makes a rule actually a <em>function</em> is that there is <em>exactly one</em> output for each input. That is, it is important that the rule be a good rule. What output do we assign to the input 7? There can only be one answer for any particular function.
    </p>

    <p>
      The description of the rule can vary greatly. We might just give a list of the images of each input. You could also describe the function with a table or a graph or in words.
    </p>
    <example>
      <statement>
        <p>
          The following are all examples of functions:

          <ol>
            <li><m>f:\Z \to \Z</m> defined by <m>f(n) = 3n</m>. The domain and codomain are both the set of integers. However, the range is only the set of integer multiples of 3.</li>
            <li><m>g: \{1,2,3\} \to \{a,b,c\}</m> defined by <m>g(1) = c</m>, <m>g(2) = a</m> and <m>g(3) = a</m>. The domain is the set <m>\{1,2,3\}</m>, the codomain is the set <m>\{a,b,c\}</m> and the range is the set <m>\{a,c\}</m>. Note that <m>g(2)</m> and <m>g(3)</m> are the same element of the codomain. This is okay since each element in the domain still has only one output.</li>
            <li>
              <m>h:\{1,2,3\} \to \{1,2,3\}</m> defined as follows:

                <figure>
                  <image xml:id="arrow-function-example" width="17%">
                    <latex-image-code>
                      <![CDATA[\begin{tikzpicture}[scale=0.85]
              \draw[->] (-1,1) node[above] {1} -- (0,0) node[below] {2};
              \draw[->] (0,1) node[above] {2} -- (-1,0) node[below] {1};
              \draw[->] (1,1) node[above] {3} -- (1,0) node[below] {3};
            \end{tikzpicture}]]>
                    </latex-image-code>
                  </image>
                </figure>
                This means that the function <m>f</m> sends 1 to 2, 2 to 1 and 3 to 3: just follow the arrows.

            </li>
          </ol>
        </p>
      </statement>
    </example>
    <p>
      The arrow diagram used to define the function above can be very helpful in visualizing functions. We will often be working with functions with <em>finite</em> domains, so this kind of picture is often more useful than a traditional graph of a function. A graph of the function in example 3 above would look like this:
    </p>
    <figure>
      <image xml:id="discrete-function-graph" width="40%">
        <latex-image-code>
          <![CDATA[\begin{tikzpicture}[scale=0.75]
      \draw[thin, gray!50] (0,0) grid (3.5, 3.5);
      \draw[->, thick] (0,0) -- (0,3.5);
     \draw[->, thick] (0,0) -- (3.5,0);
     \fill (1,2) circle (3pt) (2,1) circle (3pt) (3,3) circle (3pt);
    \end{tikzpicture}]]>
        </latex-image-code>
      </image>
    </figure>
    <p>
      It would be absolutely WRONG to connect the dots or try to fit them to some curve. There are only three elements in the domain. A curve suggests that the domain contains an entire interval of real numbers. Remember, we are not in calculus any more!
    </p>

    <p>
      Since we will so often use functions with small domains and codomains, let's adopt some notation that is a little easier to work with than that of examples 2 and 3 above. All we need is some clear way of denoting the image of each element in the domain. In fact, writing a table of values would work perfectly:

      <table>
        <tabular>
          <row bottom="minor">
            <cell right="minor" halign="center"><m>x</m></cell>
            <cell>0</cell>
            <cell>1</cell>
            <cell>2</cell>
            <cell>3</cell>
            <cell>4</cell>
          </row>
          <row>
            <cell right="minor" halign="center"><m>f(x)</m></cell>
            <cell>3</cell>
            <cell>3</cell>
            <cell>2</cell>
            <cell>4</cell>
            <cell>1</cell>
          </row>
        </tabular>
      </table>
    </p>
    <p>
      We simplify this further by writing this as a matrix with each input directly over its output:
      <me>
        f = \begin{pmatrix}0 \amp 1 \amp 2\amp 3 \amp 4 \\ 3 \amp 3 \amp 2 \amp 4 \amp 1\end{pmatrix}
      </me>
      Note this is just notation and not the same sort of matrix you would find in a linear algebra class (it does not make sense to do operations with these matrices, or row reduce them, for example).
    </p>


    <p>
      It is important to know how to determine if a rule is or is not a function. Drawing the arrow diagrams can help.
    </p>
    <example>
      <statement>
        <p>
          Which of the following diagrams represent a function? Let <m>X = \{1,2,3,4\}</m> and <m>Y = \{a,b,c,d\}</m>.
        </p>

        <!-- Fix this so the three are side-by-side: -->
        <sidebyside widths="30% 30% 30%" margins="auto">

          <figure>
            <image xml:id="f-arrows" width="75%">
              <latex-image-code>
                <![CDATA[\begin{tikzpicture}[scale=0.9]
          \draw[->] (-1.5,1) node[above] {1} -- (1.5,0) node[below] {\(d\)};
          \draw[->] (-.5,1) node[above] {2} -- (-1.5,0) node[below] {\(a\)};
          \draw[->] (.5,1) node[above] {3} -- (.5, 0) node[below] {\(c\)};
          \draw[->] (1.5,1) node[above] {4} -- (-.5, 0) node[below] {\(b\)};
                    \node[above] at (0,1.5) {$f:X \to Y$};
        \end{tikzpicture}]]>
              </latex-image-code>
            </image>
          </figure>



          <figure>
            <image xml:id="g-arrows" width="75%">
              <latex-image-code>
                <![CDATA[\begin{tikzpicture}[scale=0.9]
          \draw[->] (-1.5,1) node[above] {1} -- (1.5,0) node[below] {\(d\)};
          \draw[->] (-.5,1) node[above] {2} -- (-1.6,0) node[below] {\(a\)};
          \draw[->] (.5,1) node[above] {3} -- (-1.4, 0);
          \draw[->] (1.5,1) node[above] {4} -- (-.5, 0) node[below] {\(b\)};
          \draw (.5,0) node[below] {\(c\)};
          \node[above] at (0,1.5) { $g:X \to Y$};
        \end{tikzpicture}]]>
              </latex-image-code>
            </image>
          </figure>



          <figure>
            <image xml:id="h-arrows" width="75%">
              <latex-image-code>
                <![CDATA[\begin{tikzpicture}[scale=0.9]
          \draw (-1.5,1) node[above] {1};
          \draw[->] (-.5,1) node[above] {2} (-.6,1) -- (-1.5,0) node[below] {\(a\)};
          \draw[->] (-.4,1) -- (.5,0);
          \draw[->] (.5,1) node[above] {3} -- (1.5, 0) node[below] {\(d\)};
          \draw[->] (1.5,1) node[above] {4} -- (-.5, 0) node[below] {\(b\)};
          \draw (.5,0) node[below] {\(c\)};
                    \node[above] at (0,1.5) {$h:X \to Y$};
        \end{tikzpicture}]]>
              </latex-image-code>
            </image>
          </figure>
        </sidebyside>

      </statement>
      <solution>
        <p>
          <m>f</m> is a function. So is <m>g</m>. There is no problem with an element of the codomain not being the image of any input, and there is no problem with <m>a</m> from the codomain being the image of both 2 and 3 from the domain. We could use our two-line notation to write these as
          <me>
            f= \begin{pmatrix} 1 \amp 2 \amp 3 \amp 4 \\ d \amp a \amp c \amp b \end{pmatrix} \qquad g = \begin{pmatrix} 1 \amp 2 \amp 3 \amp 4 \\ d \amp a \amp a \amp b \end{pmatrix}.
          </me>

        </p>

        <p>
          However, <m>h</m> is <u>not</u> a function. In fact, it fails for two reasons. First, the element 1 from the domain has not been mapped to any element from the codomain. Second, the element 2 from the domain has been mapped to more than one element from the codomain (<m>a</m> and <m>c</m>). Note that either one of these problems is enough to make a rule not a function. In general, neither of the following mappings are functions:
        </p>


        <sidebyside widths="18% 27%" margins="auto">
          <figure>
            <image xml:id="not-function-a">
              <latex-image-code>
                <![CDATA[\begin{tikzpicture}[scale=0.9]
          \fill (-1, 1.2) circle (.1) (0,1.2) circle (.1) (1, 1.2) circle (.1);
          \draw[->] (-1, 1) -- (-.5,0);
          \draw[->] (1,1) -- (.5, 0);
          \draw (-.5, -0.2) circle (.1) (.5, -0.2) circle (.1);
        \end{tikzpicture}]]>
              </latex-image-code>
            </image>
          </figure>

          <figure>
            <image xml:id="not-function-b">
              <latex-image-code>
                <![CDATA[\begin{tikzpicture}[scale=0.9]
           \fill (-1, 1.2) circle (.1) (0,1.2) circle (.1) (1, 1.2) circle (.1);
           \draw[->] (-1.1, 1) -- (-1.5, 0);
           \draw[->] (-.9, 1) -- (-.5, 0);
           \draw[->] (0,1) -- (.5,0);
           \draw[->] (1,1) -- (1.5, 0);
           \draw (-.5, -0.2) circle (.1) (.5, -0.2) circle (.1) (-1.5, -0.2) circle (.1) (1.5, -0.2) circle (.1);
         \end{tikzpicture}]]>
              </latex-image-code>
            </image>
          </figure>
        </sidebyside>

        <p>
          It might also be helpful to think about how you would write the two-line notation for <m>h</m>. We would have something like:
          <me>
            h=\begin{pmatrix} 1 \amp 2 \amp 3 \amp 4 \\ \amp a,c? \amp d \amp b\end{pmatrix}.
          </me>
          There is nothing under 1 (bad) and we needed to put more than one thing under 2 (very bad). With a rule that is actually a function, two-line notation will always <q>work</q>.
        </p>
      </solution>
    </example>
  </introduction>


  <subsection xml:id="subsec_surj-inj-bij">
    <title>Surjections, Injections, and Bijections</title>
    <p>
      We now turn to investigating special properties functions might or might not possess.
    </p>

    <p>
      In the examples above, you may have noticed that sometimes there are elements of the codomain which are not in the range. When this sort of the thing <em>does not</em> happen, (that is, when everything in the codomain is in the range) we say the function is
      <term>onto</term><index><main>onto</main></index> or that the function maps the domain <em>onto</em> the codomain. This terminology should make sense: the function puts the domain (entirely) on top of the codomain. The fancy math term for an onto function is a
      <term>surjection</term><index><main>surjection</main></index>, and we say that an onto function is a
      <term>surjective</term> function.
    </p>

    <p>
      In pictures:
    </p>
    <sidebyside widths="30% 30%" margins="auto">
      <figure>
        <image xml:id="surjective-ex">
          <latex-image-code>
            <![CDATA[\begin{tikzpicture}
            \fill (-1.5, 1.2) circle (.1) (-.5,1.2) circle (.1) (.5, 1.2) circle (.1) (1.5,1.2) circle (.1);
            \draw[->] (-1.5, 1) -- (-1,0);
            \draw[->] (-.5,1) -- (0, 0);
            \draw[->] (.5, 1) -- (.9,0);
            \draw[->] (1.5,1) -- (1.1,0);
            \draw (-1, -0.2) circle (.1) (0, -0.2) circle (.1) (1, -0.2) circle (.1);
            \node[below] at (0,-.5) {Surjective};
          \end{tikzpicture}]]>
          </latex-image-code>
        </image>
        <!-- <caption>Surjective.</caption> -->
      </figure>

      <figure>
        <image xml:id="non-surjective-ex">
          <latex-image-code>
            <![CDATA[\begin{tikzpicture}
            \fill (-1.5, 1.2) circle (.1) (-.5,1.2) circle (.1) (.5, 1.2) circle (.1) (1.5,1.2) circle (.1);
            \draw[->] (-1.5, 1) -- (-1.1,0);
            \draw[->] (-.5,1) -- (-.9, 0);
            \draw[->] (.5, 1) -- (.9,0);
            \draw[->] (1.5,1) -- (1.1,0);
            \draw (-1, -0.2) circle (.1) (0, -0.2) circle (.1) (1, -0.2) circle (.1);
            \node[below] at (0,-.5) {Not surjective};
          \end{tikzpicture}]]>
          </latex-image-code>
        </image>
        <!-- <caption>Not surjective.</caption> -->
      </figure>
    </sidebyside>


    <example>
      <statement>
        <p>
          Which functions are surjective (i.e., onto)?
        </p>

        <ol>
          <li><m>f:\Z \to \Z</m> defined by <m>f(n) = 3n</m>.</li>
          <li><m>g: \{1,2,3\} \to \{a,b,c\}</m> defined by <m>g = \begin{pmatrix}1 \amp 2 \amp 3 \\ c \amp a \amp a \end{pmatrix}</m>.</li>
          <li><m>h:\{1,2,3\} \to \{1,2,3\}</m> defined as follows:
            <figure>
              <image xml:id="ex-surj-q" width="20%">
                <latex-image-code>
                  <![CDATA[\begin{tikzpicture}
        \draw[->] (-1,1) node[above] {1} -- (0,0) node[below] {2};
        \draw[->] (0,1) node[above] {2} -- (-1,0) node[below] {1};
        \draw[->] (1,1) node[above] {3} -- (1,0) node[below] {3};
      \end{tikzpicture}]]>
                </latex-image-code>
              </image>
            </figure>
          </li>
        </ol>
      </statement>
      <solution>
        <ol>
          <li><m>f</m> is not surjective. There are elements in the codomain which are not in the range. For example, no <m>n \in \Z</m> gets mapped to the number 1 (the rule would say that <m>\frac{1}{3}</m> would be sent to 1, but <m>\frac{1}{3}</m> is not in the domain). In fact, the range of the function is <m>3\Z</m> (the integer multiples of 3), which is not equal to <m>\Z</m>.</li>
          <li><m>g</m> is not surjective. There is no <m>x \in \{1,2,3\}</m> (the domain) for which <m>g(x) = b</m>, so <m>b</m>, which is in the codomain, is not in the range. Notice that there is an element from the codomain <q>missing</q> from the bottom row of the matrix.</li>
          <li><m>h</m> is surjective. Every element of the codomain is also in the range. Nothing in the codomain is missed.</li>
        </ol>
      </solution>
    </example>
    <p>
      To be a function, a rule cannot assign a single element of the domain to two or more different elements of the codomain. However, we have seen that the reverse <em>is</em> permissible: a function might assign the same element of the codomain to two or more different elements of the domain. When this <em>does not</em> occur (that is, when each element of the codomain is the image of at most one element of the domain) then we say the function is
      <term>one-to-one</term><index><main>one-to-one</main></index>. Again, this terminology makes sense: we are sending at most one element from the domain to one element from the codomain. One input to one output. The fancy math term for a one-to-one function is an
      <term>injection</term><index><main>injection</main></index>. We call one-to-one functions
      <term>injective</term> functions.
    </p>

    <p>
      In pictures:
    </p>
    <sidebyside widths="40% 40%" margins="auto">
      <figure>
        <image xml:id="injective-ex">
          <latex-image-code>
            <![CDATA[\begin{tikzpicture}
            \fill (-1.5, 1.2) circle (.1) (-.5,1.2) circle (.1) (.5, 1.2) circle (.1) (1.5,1.2) circle (.1);
            \draw[->] (-1.5, 1) -- (-2,0);
            \draw[->] (-.5,1) -- (-1, 0);
            \draw[->] (.5, 1) -- (1,0);
            \draw[->] (1.5,1) -- (2,0);
            \draw (-2, -0.2) circle (.1) (-1, -.2) circle (.1) (0, -0.2) circle (.1) (1, -0.2) circle (.1) (2, -0.2) circle (.1);
              \node[below] at (0,-.5) {Injective};
          \end{tikzpicture}]]>
          </latex-image-code>
        </image>
        <!-- <caption>Injective.</caption> -->
      </figure>


      <figure>
        <image xml:id="non-injective-ex">
          <latex-image-code>
            <![CDATA[\begin{tikzpicture}
            \fill (-1.5, 1.2) circle (.1) (-.5,1.2) circle (.1) (.5, 1.2) circle (.1) (1.5,1.2) circle (.1);
            \draw[->] (-1.5, 1) -- (-2,0);
            \draw[->] (-.5,1) -- (-1, 0);
            \draw[->] (.5, 1) -- (.9,0);
            \draw[->] (1.5,1) -- (1.1,0);
            \draw (-2, -0.2) circle (.1) (-1, -.2) circle (.1) (0, -0.2) circle (.1) (1, -0.2) circle (.1) (2, -0.2) circle (.1);
              \node[below] at (0,-.5) {Not injective};
          \end{tikzpicture}]]>
          </latex-image-code>
        </image>
        <!-- <caption>
            Not injective.
        </caption> -->
      </figure>
    </sidebyside>

    <example>
      <statement>
        <p>
          Which functions are injective (i.e., one-to-one)?
        </p>

        <ol>
          <li><m>f:\Z \to \Z</m> defined by <m>f(n) = 3n</m>.</li>
          <li><m>g: \{1,2,3\} \to \{a,b,c\}</m> defined by <m>g = \begin{pmatrix}1 \amp 2 \amp 3 \\ c \amp a \amp a \end{pmatrix}</m>.</li>
          <li><m>h:\{1,2,3\} \to \{1,2,3\}</m> defined as follows:
            <figure>
              <image width="20%">
                <latex-image-code>
                  <![CDATA[\begin{tikzpicture}
          \draw[->] (-1,1) node[above] {1} -- (0,0) node[below] {2};
          \draw[->] (0,1) node[above] {2} -- (-1,0) node[below] {1};
          \draw[->] (1,1) node[above] {3} -- (1,0) node[below] {3};
        \end{tikzpicture}]]>
                </latex-image-code>
              </image>
            </figure>
          </li>
        </ol>
      </statement>
      <solution>
        <ol>
          <li><m>f</m> is injective. Each element in the codomain is assigned to at <em>most</em> one element from the domain. If <m>x</m> is a multiple of three, then only <m>x/3</m> is mapped to <m>x</m>. If <m>x</m> is not a multiple of 3, then there is no input corresponding to the output <m>x</m>.</li>
          <li><m>g</m> is not injective. Both inputs <m>2</m> and <m>3</m> are assigned the output <m>a</m>. Notice that there is an element from the codomain that appears more than once on the bottom row of the matrix.</li>
          <li><m>h</m> is injective. Each output is only an output once.</li>
        </ol>
      </solution>
    </example>
    <p>
      From the examples above, it should be clear that there are functions which are surjective, injective, both, or neither. In the case when a function is both one-to-one and onto (an injection and surjection), we say the function is a
      <term>bijection</term><index><main>bijection</main></index>, or that the function is a
      <term>bijective</term> function.
    </p>
  </subsection>


  <subsection>
    <title>Inverse Image</title>
    <p>
      When discussing functions, we have notation for talking about an element of the domain (say <m>x</m>) and its corresponding element in the codomain (we write <m>f(x)</m>, which <em>is</em> the image of <m>x</m>). It would also be nice to start with some element of the codomain (say <m>y</m>) and talk about which element or elements (if any) from the domain it is the image of. We could write <q>those <m>x</m> in the domain such that <m>f(x) = y</m>,</q> but this is a lot of writing. Here is some notation to make our lives easier.
    </p>

    <p>
      Suppose <m>f:X \to Y</m> is a function. For <m>y \in Y</m> (an element of the codomain), we write
      <m>f\inv(y)</m><notation><usage><m>f\inv(y)</m></usage><description>The complete inverse image of <m>y</m> under <m>f</m>.</description></notation> to represent the <em>set</em> of all elements in the domain <m>X</m> which get sent to <m>y</m>. That is, <m>f\inv(y) = \{x \in X \st f(x) = y\}</m>. We say that <m>f\inv(y)</m> is the
      <term>complete inverse image</term><index><main>inverse image</main></index> of <m>y</m> under <m>f</m>.
    </p>

    <p>
      <b>WARNING: <m>f\inv(y)</m> is not an inverse function! Inverse functions only exist for bijections, but <m>f\inv(y)</m> is defined for any function <m>f</m>. The point: <m>f\inv(y)</m> is a <em>>set</em>, not an <em>element</em> of the domain.</b>
    </p>
    <example>
      <statement>
        <p>
          Consider the function <m>f:\{1,2,3,4,5,6\} \to \{a,b,c,d\}</m> given by
          <me>
            f = \begin{pmatrix}1 \amp 2 \amp 3 \amp 4 \amp 5 \amp 6 \\ a \amp a \amp b \amp c \amp c \amp c\end{pmatrix}.
          </me>
          Find the complete inverse image of each element in the codomain.
        </p>
      </statement>
      <solution>
        <p>
          Remember, we are looking for sets.
          <me>
            f\inv(a) = \{1,2\}
          </me>
        </p>
        <me>
          f\inv(b) = \{3\}
        </me>
        <me>
          f\inv(c) = \{4,5,6\}
        </me>
        <me>
          f\inv(d) = \emptyset.
        </me>
      </solution>
    </example>

    <example>
      <statement>
        <p>
          Consider the function <m>g:\Z \to \Z</m> defined by <m>g(n) = n^2 + 1</m>. Find <m>g\inv(1)</m>, <m>g\inv(2)</m>, <m>g\inv(3)</m> and <m>g\inv(10)</m>.
        </p>
      </statement>
      <solution>
        <p>
          To find <m>g\inv(1)</m>, we need to find all integers <m>n</m> such that <m>n^2 + 1 = 1</m>. Clearly only 0 works, so <m>g\inv(1) = \{0\}</m> (note that even though there is only one element, we still write it as a set with one element in it).
        </p>

        <p>
          To find <m>g\inv(2)</m>, we need to find all <m>n</m> such that <m>n^2 + 1 = 2</m>. We see <m>g\inv(2) = \{-1,1\}</m>.
        </p>

        <p>
          If <m>n^2 + 1 = 3</m>, then we are looking for an <m>n</m> such that <m>n^2 = 2</m>. There are no such integers so <m>g\inv(3) = \emptyset</m>.
        </p>

        <p>
          Finally, <m>g\inv(10) = \{-3, 3\}</m> because <m>g(-3) = 10</m> and <m>g(3) = 10</m>.
        </p>
      </solution>
    </example>
    <p>
      Since <m>f\inv(y)</m> is a set, it makes sense to ask for <m>\card{f\inv(y)}</m>, the number of elements in the domain which map to <m>y</m>.
    </p>
    <example>
      <statement>
        <p>
          Find a function <m>f:\{1,2,3,4,5\} \to \N</m> such that <m>\card{f\inv(7)} = 5</m>.
        </p>
      </statement>
      <solution>
        <p>
          There is only one such function. We need five elements of the domain to map to the number <m>7 \in \N</m>. Since there are only five elements in the domain, all of them must map to 7. So
          <me>
            f = \begin{pmatrix}1 \amp 2 \amp 3 \amp 4 \amp 5 \\ 7 \amp 7 \amp 7 \amp 7 \amp 7\end{pmatrix}.
          </me>
        </p>
      </solution>
    </example>

    <assemblage>
      <title>Function Definitions</title>
      <p>
        <ul>
          <li>
            <p>
              A
              <term>function</term> is a rule that assigns each element of a set, called the
              <term>domain</term>, to exactly one element of a second set, called the
              <term>codomain</term>.
            </p>
          </li>

          <li>
            <p>
              Notation: <m>f:X \to Y</m> is our way of saying that the function is called <m>f</m>, the domain is the set <m>X</m>, and the codomain is the set <m>Y</m>.
            </p>
          </li>

          <li>
            <p>
              To specify the rule for a function with small domain, use
              <term>two-line notation</term> by writing a matrix with each output directly below its corresponding input, as in:
              <me>
                f = \begin{pmatrix}1 \amp 2 \amp 3 \amp 4 \\ 2 \amp 1 \amp 3 \amp 1 \end{pmatrix}.
              </me>

            </p>
          </li>

          <li>
            <p><m>f(x) = y</m> means the element <m>x</m> of the domain (input) is assigned to the element <m>y</m> of the codomain. We say <m>y</m> is an output. Alternatively, we call <m>y</m> the
              <term>image of <m>x</m> under <m>f</m></term>.</p>
          </li>

          <li>
            <p>
              The
              <term>range</term> is a subset of the codomain. It is the set of all elements which are assigned to at least one element of the domain by the function. That is, the range is the set of all outputs.
            </p>
          </li>

          <li>
            <p>
              A function is
              <term>injective</term> (an
              <term>injection</term> or
              <term>one-to-one</term>) if every element of the codomain is the output for
              <term>at most</term> one element from the domain.
            </p>
          </li>

          <li>
            <p>
              A function is
              <term>surjective</term> (a
              <term>surjection</term> or
              <term>onto</term>) if every element of the codomain is the output of
              <term>at least</term> one element of the domain.
            </p>
          </li>

          <li>
            <p>
              A
              <term>bijection</term> is a function which is both an injection and surjection. In other words, if every element of the codomain is the output of
              <term>exactly one</term> element of the domain.
            </p>
          </li>


          <li><p>
            The <term>image</term> of an element <m>x</m> in the domain is the element <m>y</m> in the codomain that <m>x</m> is mapped to.  That is, the image of <m>x</m> under <m>f</m> is  <m>f(x)</m>.
          </p></li>


          <li>
            <p>
              The
              <term>complete inverse image</term> of an element <m>y</m> in the codomain, written <m>f\inv(y)</m>, is the <em>set</em> of all elements in the domain which are assigned to <m>y</m> by the function.
            </p>
          </li>
        </ul>
      </p>
    </assemblage>
</subsection>








    <exercises>

      <exercise>
        <statement>
          <p>
            Write out all functions <m>f: \{1,2,3\} \to \{a,b\}</m> (using two-line notation). How many are there? How many are injective? How many are surjective? How many are both?
          </p>
        </statement>
        <solution>
          <p>
            There are 8 different functions. In two-line notation these are:

            <p>
              <me> f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ a \amp a\amp a \end{pmatrix} \quad f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ b \amp b \amp b \end{pmatrix}</me>
              <me> f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ a \amp a\amp b \end{pmatrix} \quad f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ a \amp b \amp a \end{pmatrix} \quad f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ b \amp a\amp a \end{pmatrix}
              </me>
              <me>
                \quad f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ b \amp b \amp a \end{pmatrix} \quad f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ b \amp a\amp b \end{pmatrix} \quad f = \begin{pmatrix} 1 \amp 2 \amp 3 \\ a \amp b \amp b \end{pmatrix} </me>

            </p>

            None of the functions are injective. Exactly 6 of the functions are surjective. No functions are both (since no functions here are injective).
          </p>
        </solution>
      </exercise>


      <exercise>
        <statement>
          <p>
            Write out all functions <m>f: \{1,2\} \to \{a,b,c\}</m> (in two-line notation). How many are there? How many are injective? How many are surjective? How many are both?
          </p>
        </statement>

        <solution>
          <p>
            There are 9 functions: you have a choice of three outputs for <m>f(1)</m>, and for each, you have three choices for the output <m>f(2)</m>. Of these functions, 6 are injective, 0 are surjective, and 0 are both:

            <me>
              f = \twoline{1 \amp 2}{a\amp a} \quad f = \twoline{1 \amp 2}{b \amp b} \quad f = \twoline{1 \amp 2}{c \amp c}
            </me>
             <me>
               f = \twoline{1 \amp 2}{a\amp b} \quad f = \twoline{1 \amp 2}{a \amp c} \quad f = \twoline{1 \amp 2}{b \amp c}
             </me>
             <me>
               f = \twoline{1 \amp 2}{b \amp a} \quad f = \twoline{1 \amp 2}{c \amp a} \quad f = \twoline{1 \amp 2}{c \amp b}
             </me>
          </p>
        </solution>
      </exercise>


      <exercise>
        <statement>
          <p>
            Consider the function <m>f:\{1,2,3,4,5\} \to \{1,2,3,4\}</m> given by the table below:
          </p>
          <table>
            <tabular>
              <row bottom="minor">
                <cell  right="minor" halign="center"><m>x</m></cell>
                <cell>1</cell>
                <cell>2</cell>
                <cell>3</cell>
                <cell>4</cell>
                <cell>5</cell>
              </row>
              <row>
                <cell right="minor" halign="center"><m>f(x)</m></cell>
                <cell>3</cell>
                <cell>2</cell>
                <cell>4</cell>
                <cell>1</cell>
                <cell>2</cell>
              </row>
            </tabular>
          </table>
          <ol>
            <li>
              <p>
                Is <m>f</m> injective? Explain.
              </p>
            </li>
            <li>
              <p>
                Is <m>f</m> surjective? Explain.
              </p>
            </li>
            <li>
              <p>
                Write the function using two-line notation.
              </p>
            </li>

          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>f</m> is not injective, since <m>f(2) = f(5)</m> - two different inputs have the same output.</li>
            <li><m>f</m> is surjective, since every element of the codomain is an element of the range.</li>
            <li><m>f=\begin{pmatrix}1 \amp 2 \amp 3 \amp 4 \amp 5 \\ 3 \amp 2 \amp 4 \amp 1 \amp 2\end{pmatrix}</m>.</li>

          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Consider the function <m>f:\{1,2,3,4\} \to \{1,2,3,4\}</m> given by the graph below.
          </p>
          <figure>
            <image xml:id="graph-function-ques" width="45%">
              <latex-image-code>
                <![CDATA[\begin{tikzpicture}[scale=1]
      \draw[thin, gray!50] (0,0) grid (4.5, 4.5);
      \draw[<->, thick] (0,4.5) node[left] {\(f(x)\)} -- (0,0) -- (4.5,0) node[below right] {\(x\)};
      \foreach \x in {1,2,3,4}
        \draw (\x,0) node[below] { \x} (0, \x) node[left] { \x};
      \fill (1,3) circle (.1) (2,4) circle (.1) (3,1) circle (.1) (4,3) circle (.1);
    \end{tikzpicture}]]>
              </latex-image-code>
            </image>
          </figure>
          <ol>
            <li>
              <p>
                Is <m>f</m> injective? Explain.
              </p>
            </li>
            <li>
              <p>
                Is <m>f</m> surjective? Explain.
              </p>
            </li>
            <li>
              <p>
                Write the function using two-line notation.
              </p>
            </li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>f</m> is not injective, since <m>f(1) = 3</m> and <m>f(4) = 3</m>.</li>
            <li><m>f</m> is not surjective, since there is no input which gives 2 as an output.</li>
            <li><m>f=\begin{pmatrix} 1 \amp 2 \amp 3 \amp 4 \\ 3 \amp 4 \amp 1 \amp 3\end{pmatrix}</m>.</li>

          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            For each function given below, determine whether or not the function is injective and whether or not the function is surjective.
          </p>

          <ol>
            <li><m>f:\N \to \N</m> given by <m>f(n) = n+4</m>.</li>
            <li><m>f:\Z \to \Z</m> given by <m>f(n) = n+4</m>.</li>
            <li><m>f:\Z \to \Z</m> given by <m>f(n) = 5n - 8</m>.</li>
            <li><m>f:\Z \to \Z</m> given by <m>f(n) = \begin{cases}n/2 \amp  \mbox{ if <m>n</m> is even} \\ (n+1)/2 \amp \mbox{ if <m>n</m> is odd} . \end{cases}
              </m>
            </li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>f</m> is injective, but not surjective (since 0, for example, is never an output).</li>
            <li><m>f</m> is injective and surjective. Unlike in the previous question, every integers is an output (of the integer 4 less than it).</li>
            <li><m>f</m> is injective, but not surjective (10 is not 8 less than a multiple of 5, for example).</li>
            <li><m>f</m> is not injective, but is surjective. Every integer is an output (of twice itself, for example) but some integers are outputs of more than one input: <m>f(5) = 3 = f(6)</m>.</li>
          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Let <m>A = \{1,2,3,\ldots,10\}</m>. Consider the function <m>f:\pow(A) \to \N</m> given by <m>f(B) = |B|</m>. That is, <m>f</m> takes a subset of <m>A</m> as an input and outputs the cardinality of that set.
          </p>

          <ol>
            <li>
              <p>
                Is <m>f</m> injective? Prove your answer.
              </p>
            </li>
            <li>
              <p>
                Is <m>f</m> surjective? Prove your answer.
              </p>
            </li>
            <li>
              <p>
                Find <m>f\inv(1)</m>.
              </p>
            </li>
            <li>
              <p>
                Find <m>f\inv(0)</m>.
              </p>
            </li>
            <li>
              <p>
                Find <m>f\inv(12)</m>.
              </p>
            </li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>f</m> is not injective. To prove this, we must simply find two different elements of the domain which map to the same element of the codomain. Since <m>f(\{1\}) = 1</m> and <m>f(\{2\}) = 1</m>, we see that <m>f</m> is not injective.</li>
            <li><m>f</m> is not surjective. The largest subset of <m>A</m> is <m>A</m> itself, and <m>|A| = 10</m>. So no natural number greater than 10 will ever be an output.</li>
            <li><m>f\inv(1) = \{\{1\}, \{2\}, \{3\}, \ldots \{10\}\}</m> (the set of all the singleton subsets of <m>A</m>).</li>
            <li><m>f\inv(0) = \{\emptyset\}</m>. Note, it would be wrong to write <m>f\inv(0) = \emptyset</m> - that would claim that there is no input which has 0 as an output.</li>
            <li><m>f\inv(12) = \emptyset</m>, since there are no subsets of <m>A</m> with cardinality 12.</li>
          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Let <m>A = \{n \in \N \st 0 \le n \le 999\}</m> be the set of all numbers with three or fewer digits. Define the function <m>f:A \to \N</m> by <m>f(abc) = a+b+c</m>, where <m>a</m>, <m>b</m>, and <m>c</m> are the digits of the number in <m>A</m>. For example, <m>f(253) = 2 + 5 + 3 =  10</m>.
          </p>

          <ol>
            <li>
              <p>
                Find <m>f\inv(3)</m>.
              </p>
            </li>
            <li>
              <p>
                Find <m>f\inv(28)</m>.
              </p>
            </li>
            <li>
              <p>
                Is <m>f</m> injective. Explain.
              </p>
            </li>
            <li>
              <p>
                Is <m>f</m> surjective. Explain.
              </p>
            </li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>f\inv(3) = \{003, 030, 300, 012, 021, 102, 201, 120, 210, 111\}</m></li>
            <li><m>f\inv(28) = \emptyset</m> (since the largest sum of three digits is <m>9+9+9 = 27</m>)</li>
            <li>
              <p>
                Part (a) proves that <m>f</m> is not injective. The output 3 is assigned to 10 different inputs.
              </p>
            </li>
            <li>
              <p>
                Part (b) proves that <m>f</m> is not surjective. There is an element of the codomain (28) which is not assigned to any inputs.
              </p>
            </li>
          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Let <m>f:X \to Y</m> be some function. Suppose <m>3 \in Y</m>. What can you say about <m>f\inv(3)</m> if you know,
          </p>

          <ol>
            <li><m>f</m> is injective? Explain.</li>
            <li><m>f</m> is surjective? Explain.</li>
            <li><m>f</m> is bijective? Explain.</li>
          </ol>
        </statement>

        <solution>
          <ol>
            <li><m>|f\inv(3)| \le 1</m>. In other words, either <m>f\inv(3)</m> is the emptyset or is a set containing exactly one element. Injective functions cannot have two elements from the domain both map to 3.</li>
            <li><m>|f\inv(3)| \ge 1</m>. In other words, <m>f\inv(3)</m> is a set containing at least one elements, possibly more. Surjective functions must have something map to 3.</li>
            <li><m>|f\inv(3)| = 1</m>. There is exactly one element from <m>X</m> which gets mapped to 3, so <m>f\inv(3)</m> is the set containing that one element.</li>
          </ol>
        </solution>
      </exercise>


      <exercise>
        <statement>
          <p>
            Find a set <m>X</m> and a function <m>f:X \to \N</m> so that <m>f\inv(0) \cup f\inv(1) = X</m>.
          </p>
        </statement>
        <solution>
          <p>
            <m>X</m> can really be any set, as long as <m>f(x) = 0</m> or <m>f(x) = 1</m> for every <m>x \in X</m>. For example, <m>X = \N</m> and <m>f(n) = 0</m> works.
          </p>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            What can you deduce about the sets <m>X</m> and <m>Y</m> if you know
            <ellipsis />
          </p>

          <ol>
            <li>
              <p>
                there is an injective function <m>f:X \to Y</m>? Explain.
              </p>
            </li>
            <li>
              <p>
                there is a surjective function <m>f:X \to Y</m>? Explain.
              </p>
            </li>
            <li>
              <p>
                there is a bijectitve function <m>f:X \to Y</m>? Explain.
              </p>
            </li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>|X| \le |Y|</m>. Otherwise two or more of the elements of <m>X</m> would need to map to the same element of <m>Y</m>.</li>
            <li><m>|X| \ge |Y|</m>. Otherwise there would be one or more elements of <m>Y</m> which were never an output.</li>
            <li><m>|X| = |Y|</m>. This is the only way for both of the above to occur.</li>
          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Suppose <m>f:X \to Y</m> is a function. Which of the following are possible? Explain.
          </p>

          <ol>
            <li><m>f</m> is injective but not surjective.</li>
            <li><m>f</m> is surjective but not injective.</li>
            <li><m>|X| = |Y|</m> and <m>f</m> is injective but not surjective.</li>
            <li><m>|X| = |Y|</m> and <m>f</m> is surjective but not injective.</li>
            <li><m>|X| = |Y|</m>, <m>X</m> and <m>Y</m> are finite, and <m>f</m> is injective but not surjective.</li>
            <li><m>|X| = |Y|</m>, <m>X</m> and <m>Y</m> are finite, and <m>f</m> is surjective but not injective.</li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li>
              <p> Possible. For example, let <m>X=\{1,2\}</m> and <m>Y = \{1,2,3\}</m> and consider <m>f=\begin{pmatrix}1 \amp 2 \\ 1 \amp 3\end{pmatrix}</m>. </p>
            </li>
            <li>
              <p> Possible. For example, let <m>X = \{1,2\}</m> and <m>Y = \{1\}</m> with <m>f(1) = f(2) = 1</m>.</p>
            </li>
            <li>
              <p> Possible. This is possible, but only if both <m>X</m> and <m>Y</m> are infinite. For example, if <m>X = Y = \Z</m>, consider <m>f(x) = 2x</m>.</p>
            </li>
            <li>
              <p> Possible. For example, again take <m>X = Y = \N</m> and consider <m>f(x) = \begin{cases} 0 \amp \mathrm{ if } x = 0 \\ x-1 \amp \mathrm{ if } x \ge 1\end{cases}</m></p>
            </li>
            <li>
              <p> Not possible. If <m>f</m> is injective, then each input corresponds to a different output, so the range is the size of <m>X</m>, which is the size of <m>Y</m>, so the range is all of <m>Y</m>.</p>
            </li>
            <li>
              <p> Not possible. If <m>f</m> is surjective, then every element of the codomain is an output. If more than one output corresponded to a single input, we would not have enough inputs to cover all the outputs.</p>
            </li>
          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Consider the function <m>f:\Z \to \Z</m> given by <m>f(n) = \begin{cases}n+1 \amp  \mbox{ if <m>n</m> is even} \\ n-3 \amp \mbox{ if <m>n</m> is odd} . \end{cases}
            </m>
          </p>

          <ol>
            <li>
              <p>
                Is <m>f</m> injective? Prove your answer.
              </p>
            </li>
            <li>
              <p>
                Is <m>f</m> surjective? Prove your answer.
              </p>
            </li>
          </ol>
        </statement>
        <solution>
          <ol>
            <li><m>f</m> is injective.

              <proof>
                <p>
                  Let <m>x</m> and <m>y</m> be elements of the domain <m>\Z</m>. Assume <m>f(x) = f(y)</m>. If <m>x</m> and <m>y</m> are both even, then <m>f(x) = x+1</m> and <m>f(y) = y+1</m>. Since <m>f(x) = f(y)</m>, we have <m>x + 1 = y + 1</m> which implies that <m>x = y</m>. Similarly, if <m>x</m> and <m>y</m> are both odd, then <m>x - 3 = y-3</m> so again <m>x = y</m>. The only other possibility is that <m>x</m> is even an <m>y</m> is odd (or visa-versa). But then <m>x + 1</m> would be odd and <m>y - 3</m> would be even, so it cannot be that <m>f(x) = f(y)</m>. Therefore if <m>f(x) = f(y)</m> we then have <m>x = y</m>, which proves that <m>f</m> is injective.
                </p>
              </proof>

            </li>
            <li><m>f</m> is surjective.

              <proof>
                <p>
                  Let <m>y</m> be an element of the codomain <m>\Z</m>. We will show there is an element <m>n</m> of the domain (<m>\Z</m>) such that <m>f(n) = y</m>. There are two cases: First, if <m>y</m> is even, then let <m>n = y+3</m>. Since <m>y</m> is even, <m>n</m> is odd, so <m>f(n) = n-3 = y+3-3 = y</m> as desired. Second, if <m>y</m> is odd, then let <m>n = y-1</m>. Since <m>y</m> is odd, <m>n</m> is even, so <m>f(n) = n+1 = y-1+1 = y</m> as needed. Therefore <m>f</m> is surjective.
                </p>
              </proof>

            </li>
          </ol>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            At the end of the semester a teacher assigns letter grades to each of her students. Is this a function? If so, what sets make up the domain and codomain, and is the function injective, surjective, bijective, or neither?
          </p>
        </statement>
        <solution>
          <p>
            Yes, this is a function, if you choose the domain and codomain correctly. The domain will be the set of students, and the codomain will be the set of possible grades. The function is almost certainly not injective, because it is likely that two students will get the same grade. The function might be surjective <ndash /> it will be if there is at least one student who gets each grade.
          </p>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            In the game of <em>Hearts</em>, four players are each dealt 13 cards from a deck of 52. Is this a function? If so, what sets make up the domain and codomain, and is the function injective, surjective, bijective, or neither?
          </p>
        </statement>
        <solution>
          <p>
            Yes, as long as the set of cards is the domain and the set of players is the codomain. The function is not injective because multiple cards go to each player. It is surjective since all players get cards.
          </p>
        </solution>
      </exercise>

      <exercise>
        <statement>
          <p>
            Suppose 7 players are playing 5-card stud. Each player initially receives 5 cards from a deck of 52. Is this a function? If so, what sets make up the domain and codomain, and is the function injective, surjective, bijective, or neither?
          </p>
        </statement>
        <solution>
          <p>
            This cannot be a function. If the domain were the set of cards, then it is not a function because not every card gets dealt to a player. If the domain were the set of players, it would not be a function because a single player would get mapped to multiple cards. Since this is not a function, it doesn't make sense to say whether it is injective/surjective/bijective.
          </p>
        </solution>
      </exercise>

    </exercises>

</section>
