<?xml version="1.0" encoding="UTF-8"?>
<html>
  <head>
<!--**************************************-->
<!--* Generated from MathBook XML source *-->
<!--*    on 2016-08-16T06:50:20-06:00    *-->
<!--*                                    *-->
<!--*   http://mathbook.pugetsound.edu   *-->
<!--*                                    *-->
<!--**************************************-->
</head>
  <body>
    <div style="display:none;">\(\def\d{\displaystyle}
\def\course{Math 228}
\newcommand{\f}[1]{\mathfrak #1}
\newcommand{\s}[1]{\mathscr #1}
\def\N{\mathbb N}
\def\B{\mathbf{B}}
\def\circleA{(-.5,0) circle (1)}
\def\Z{\mathbb Z}
\def\circleAlabel{(-1.5,.6) node[above]{$A$}}
\def\Q{\mathbb Q}
\def\circleB{(.5,0) circle (1)}
\def\R{\mathbb R}
\def\circleBlabel{(1.5,.6) node[above]{$B$}}
\def\C{\mathbb C}
\def\circleC{(0,-1) circle (1)}
\def\F{\mathbb F}
\def\circleClabel{(.5,-2) node[right]{$C$}}
\def\A{\mathbb A}
\def\twosetbox{(-2,-1.5) rectangle (2,1.5)}
\def\X{\mathbb X}
\def\threesetbox{(-2,-2.5) rectangle (2,1.5)}
\def\E{\mathbb E}
\def\O{\mathbb O}
\def\U{\mathcal U}
\def\pow{\mathcal P}
\def\inv{^{-1}}
\def\nrml{\triangleleft}
\def\st{:}
\def\~{\widetilde}
\def\rem{\mathcal R}
\def\sigalg{$\sigma$-algebra }
\def\Gal{\mbox{Gal}}
\def\iff{\leftrightarrow}
\def\Iff{\Leftrightarrow}
\def\land{\wedge}
\def\And{\bigwedge}
\def\entry{\entry}
\def\AAnd{\d\bigwedge\mkern-18mu\bigwedge}
\def\Vee{\bigvee}
\def\VVee{\d\Vee\mkern-18mu\Vee}
\def\imp{\rightarrow}
\def\Imp{\Rightarrow}
\def\Fi{\Leftarrow}
\def\var{\mbox{var}}
\def\Th{\mbox{Th}}
\def\entry{\entry}
\def\sat{\mbox{Sat}}
\def\con{\mbox{Con}}
\def\iffmodels{\bmodels\models}
\def\dbland{\bigwedge \!\!\bigwedge}
\def\dom{\mbox{dom}}
\def\rng{\mbox{range}}
\def\isom{\cong}
\DeclareMathOperator{\wgt}{wgt}
\newcommand{\vtx}[2]{node[fill,circle,inner sep=0pt, minimum size=4pt,label=#1:#2]{}}
\newcommand{\va}[1]{\vtx{above}{#1}}
\newcommand{\vb}[1]{\vtx{below}{#1}}
\newcommand{\vr}[1]{\vtx{right}{#1}}
\newcommand{\vl}[1]{\vtx{left}{#1}}
\renewcommand{\v}{\vtx{above}{}}
\def\circleA{(-.5,0) circle (1)}
\def\circleAlabel{(-1.5,.6) node[above]{$A$}}
\def\circleB{(.5,0) circle (1)}
\def\circleBlabel{(1.5,.6) node[above]{$B$}}
\def\circleC{(0,-1) circle (1)}
\def\circleClabel{(.5,-2) node[right]{$C$}}
\def\twosetbox{(-2,-1.4) rectangle (2,1.4)}
\def\threesetbox{(-2.5,-2.4) rectangle (2.5,1.4)}
\def\ansfilename{practice-answers}
\def\shadowprops{{fill=black!50,shadow xshift=0.5ex,shadow yshift=0.5ex,path fading={circle with fuzzy edge 10 percent}}}
\newcommand{\hexbox}[3]{
  \def\x{-cos{30}*\r*#1+cos{30}*#2*\r*2}
  \def\y{-\r*#1-sin{30}*\r*#1}
  \draw (\x,\y) +(90:\r) -- +(30:\r) -- +(-30:\r) -- +(-90:\r) -- +(-150:\r) -- +(150:\r) -- cycle;
  \draw (\x,\y) node{#3};
}
\renewcommand{\bar}{\overline}
\newcommand{\card}[1]{\left| #1 \right|}
\newcommand{\twoline}[2]{\begin{pmatrix}#1 \\ #2 \end{pmatrix}}
\newcommand{\lt}{ &lt; }
\newcommand{\gt}{ &gt; }
\newcommand{\amp}{ &amp; }
\)</div>
    <section class="section" id="sec_gt-intro">
      <header>
        <h1>Section 4.1 Definitions</h1>
      </header>
      <article class="example-like" id="investigation-29">
        <h5 class="heading">
          <span class="type">Investigate!</span>
          <span class="codenumber">29</span>
        </h5>
        <p id="p-2156">
			Which (if any) of the graphs below are the same?
		<div class="sidebyside" style="" id="sidebyside-11"><div class="sbsrow" style="margin-left:1%;margin-right:1%;"><h5 class="sbsheader" style="width:18.3673469387755%;"/><h5 class="sbsheader" style="width:18.3673469387755%;"/><h5 class="sbsheader" style="width:18.3673469387755%;"/><h5 class="sbsheader" style="width:18.3673469387755%;"/><h5 class="sbsheader" style="width:18.3673469387755%;"/></div><div class="sbsrow" style="margin-left:1%;margin-right:1%;"><div class="sbspanel" style="width:18.3673469387755%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-60.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:18.3673469387755%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-61.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:18.3673469387755%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-62.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:18.3673469387755%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-63.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:18.3673469387755%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-64.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div></div><div class="sbsrow" style="margin-left:1%;margin-right:1%;"><figcaption class="sbscaption" style="width:18.3673469387755%;"/><figcaption class="sbscaption" style="width:18.3673469387755%;"/><figcaption class="sbscaption" style="width:18.3673469387755%;"/><figcaption class="sbscaption" style="width:18.3673469387755%;"/><figcaption class="sbscaption" style="width:18.3673469387755%;"/></div></div>
			The graphs above are unlabeled. Usually we think of a graph as having a specific set of vertices. Which (if any) of the graphs below are the same?
		<div class="sidebyside" style="" id="sidebyside-12"><div class="sbsrow" style="margin-left:3.5%;margin-right:3.5%;"><h5 class="sbsheader" style="width:19.3548387096774%;"/><h5 class="sbsheader" style="width:19.3548387096774%;"/><h5 class="sbsheader" style="width:19.3548387096774%;"/><h5 class="sbsheader" style="width:19.3548387096774%;"/></div><div class="sbsrow" style="margin-left:3.5%;margin-right:3.5%;"><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-65.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-66.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-67.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-68.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div></div><div class="sbsrow" style="margin-left:3.5%;margin-right:3.5%;"><figcaption class="sbscaption" style="width:19.3548387096774%;"/><figcaption class="sbscaption" style="width:19.3548387096774%;"/><figcaption class="sbscaption" style="width:19.3548387096774%;"/><figcaption class="sbscaption" style="width:19.3548387096774%;"/></div></div>
			Actually, all the graphs we have seen above are just <!--Style me with CSS--><em>drawings</em> of graphs. A graph is really an abstract mathematical object consisting of two sets \(V\) and \(E\) where \(E\) is a set of 2-element subsets of \(V\).
			Are the graphs below the same or different?
		<dl class="description-list-narrow"><dt id="li-1169">Graph 1:</dt><dd><p id="p-2157">\(V = \{a, b, c, d, e\}\),</p><p id="p-2158"> \(E = \{\{a,b\}, \{a, c\}, \{a,d\}, \{a,e\}, \{b,c\}, \{d,e\}\}\).</p></dd><dt id="li-1170">Graph 2:</dt><dd><p id="p-2159">\(V = \{v_1, v_2, v_3, v_4, v_5\}\),</p><p id="p-2160"> \(E = \{\{v_1, v_3\}, \{v_1, v_5\}, \{v_2, v_4\}, \{v_2, v_5\}, \{v_3, v_5\}, \{v_4, v_5\}\}\).</p></dd></dl>
</p>
      </article>
      <p id="p-2161">
	  Before we start studying graphs, we need to agree upon what a graph is.  		While we almost always think of graphs as pictures (dots connected by lines) this is fairly ambiguous.  Do the lines need to be straight?  Does it matter how long the lines are or how large the dots are?  Can there be two lines connecting the same pair of dots?  Can one line connect three dots?</p>
      <p id="p-2162">
		  The way we avoid ambiguities in mathematics is to provide concrete and rigorous <!--Style me with CSS--><em>definitions</em>.  Crafting good definitions is not easy, but it is incredibly important.  The definition is the agreed upon starting point from which all truths in mathematics proceed.  Is there a graph with no edges?  We have to look at the definition to see if this is possible.
		</p>
      <p id="p-2163">
		  We want our definition to be precise and unambiguous, but it also must agree with our intuition for the objects we are studying.  It needs to be useful: we <!--Style me with CSS--><em>could</em> define a graph to be a six legged mammal, but that would not let us solve any problems about bridges.  Instead, here is the (now) standard definition of a graph.
		</p>
      <article class="assemblage-like" id="assemblage-39">
        <h5 class="heading">Graph Definition</h5>
        <p id="p-2164">	A <em class="terminology">graph</em> is an ordered pair \(G = (V, E)\) consisting of a nonempty set \(V\) (called the <em class="terminology">vertices</em>) and a set \(E\) (called the <em class="terminology">edges</em>) of two-element subsets of \(V\).</p>
      </article>
      <p id="p-2165">
		 Strange.  Nowhere in the definition is there talk of dots or lines.  From the definition, a graph could be \begin{equation*}(\{a,b,c,d\}, \{\{a,b\}, \{a,c\}, \{b,c\}, \{b,d\}, \{c,d\}\}).\end{equation*}
		 Here we have a graph with four vertices  (the letters \(a, b, c, d\)) and four edges (the pairs \(\{a,b\}, \{a,c\}, \{b,c\}, \{b,d\}, \{c,d\})\)).
	 </p>
      <p id="p-2166">Looking at sets and sets of 2-element sets is difficult to process.  That is why we often draw a representation of these sets.  We put a dot down for each vertex, and connect two dots with a line precisely when those two vertices are one of the 2-element subsets in our set of edges.  Thus one way to draw the graph described above is this:
	</p>
      <figure class="figure-like" id="figure-49">
        <object type="image/svg+xml" style="width:25%; margin:auto; display:block;" data="images/image-69.svg" alt="">
          <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
        </object>
      </figure>
      <p id="p-2167">
		However we could also have drawn the graph differently. For example either of these:
	</p>
      <div class="sidebyside" style="" id="sidebyside-13">
        <div class="sbsrow" style="margin-left:13.75%;margin-right:13.75%;">
          <h5 class="sbsheader" style="width:27.5862068965517%;"/>
          <h5 class="sbsheader" style="width:34.4827586206897%;"/>
        </div>
        <div class="sbsrow" style="margin-left:13.75%;margin-right:13.75%;">
          <div class="sbspanel" style="width:27.5862068965517%;justify-content:flex-end;">
            <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-70.svg" alt="">
              <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
            </object>
          </div>
          <div class="sbspanel" style="width:34.4827586206897%;justify-content:flex-end;">
            <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-71.svg" alt="">
              <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
            </object>
          </div>
        </div>
        <div class="sbsrow" style="margin-left:13.75%;margin-right:13.75%;">
          <figcaption class="sbscaption" style="width:27.5862068965517%;"/>
          <figcaption class="sbscaption" style="width:34.4827586206897%;"/>
        </div>
      </div>
      <p id="p-2168">
		We should be careful about what it means for two graphs to be “the same.”  Actually, given our definition, this is easy: Are the vertex sets equal?  Are the edge sets equal?  We know what it means for sets to be equal, and graphs are nothing but a pair of two special sorts of sets. </p>
      <article class="example-like" id="example-106">
        <h5 class="heading">
          <span class="type">Example</span>
          <span class="codenumber">4.1.1</span>
        </h5>
        <p id="p-2169">
					Are the graphs below equal? \begin{equation*}G_1 = (\{a,b,c\}, \{\{a,b\}, \{b,c\}\}); \qquad G_2 = (\{a,b,c\}, \{\{a,c\}, \{c, b\}\})\end{equation*} equal?
				</p>
      </article>
      <div class="posterior">
        <div>
          <span class="hidden-knowl-wrapper">
            <a knowl="" class="id-ref" refid="hk-solution-250" id="solution-250">
              <span class="">Solution</span>
            </a>
          </span>
          <span id="hk-solution-250" style="display: none;" class="tex2jax_ignore">
            <div class="remark-like">
              <p id="p-2170">
				  No.  Here the vertex sets of each graph are equal, which is a good start.  Also, both graphs have two edges.  In the first graph, we have edges \(\{a,b\}\) and \(\{b,c\}\), while in the second graph we have edges	\(\{a,c\}\) and 	\(\{c,b\}\).  Now we do have \(\{b,c\} = \{c,b\}\), so that is not the problem.  The issue is that \(\{a,b\} \ne \{a,c\}\).  Since the edge sets of the two graphs are not equal (as sets), the graphs are not the equal (as graphs).
				</p>
            </div>
          </span>
        </div>
      </div>
      <p id="p-2171">
		 Even if two graphs are not <!--Style me with CSS--><em>equal</em>, they might be <!--Style me with CSS--><em>basically</em> the same. The graphs in the previous example could be drawn like this:
		 <figure class="figure-like" id="figure-50"><object type="image/svg+xml" style="width:60%; margin:auto; display:block;" data="images/image-72.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></figure>
		 Graphs that are basically the same (but perhaps not equal) are called <em class="terminology">isomorphic</em>. We will give a precise definition of this term after a quick example:
	</p>
      <article class="example-like" id="example-107">
        <h5 class="heading">
          <span class="type">Example</span>
          <span class="codenumber">4.1.2</span>
        </h5>
        <p id="p-2172">
				Consider the graphs:
<blockquote><p id="p-2173">
				\(G_1 = \{V_1, E_1\}\) where \(V_1 = \{a, b, c\}\) and \(E_1 = \{\{a,b\}, \{a,c\}, \{b,c\}\}\);
			</p><p id="p-2174">
				\(G_2 = \{V_2, E_2\}\) where \(V_2 = \{u,v,w\}\) and \(E_2 = \{\{u,v\}, \{u,w\}, \{v,w\}\}\).
			</p></blockquote>
				Are these graphs the same?
			</p>
      </article>
      <div class="posterior">
        <div>
          <span class="hidden-knowl-wrapper">
            <a knowl="" class="id-ref" refid="hk-solution-251" id="solution-251">
              <span class="">Solution</span>
            </a>
          </span>
          <span id="hk-solution-251" style="display: none;" class="tex2jax_ignore">
            <div class="remark-like">
              <p id="p-2175">
				The two graphs are NOT equal. It is enough to notice that \(V_1 \ne V_2\) since \(a \in V_1\) but \(a \notin V_2\). However, both of these graphs consist of three vertices with edges connecting every pair of vertices. We can draw them as follows:
			</p>
              <div class="sidebyside" style="" id="sidebyside-14">
                <div class="sbsrow" style="margin-left:12.5%;margin-right:12.5%;">
                  <h5 class="sbsheader" style="width:33.3333333333333%;"/>
                  <h5 class="sbsheader" style="width:33.3333333333333%;"/>
                </div>
                <div class="sbsrow" style="margin-left:12.5%;margin-right:12.5%;">
                  <div class="sbspanel" style="width:33.3333333333333%;justify-content:flex-end;">
                    <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-73.svg" alt="">
                      <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
                    </object>
                  </div>
                  <div class="sbspanel" style="width:33.3333333333333%;justify-content:flex-end;">
                    <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-74.svg" alt="">
                      <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
                    </object>
                  </div>
                </div>
                <div class="sbsrow" style="margin-left:12.5%;margin-right:12.5%;">
                  <figcaption class="sbscaption" style="width:33.3333333333333%;"/>
                  <figcaption class="sbscaption" style="width:33.3333333333333%;"/>
                </div>
              </div>
              <p id="p-2176">
				Clearly we want to say these graphs are basically the same, so while they are not equal, they will be <!--Style me with CSS--><em>isomorphic</em>. The reason is we can rename the vertices of one graph and get the second graph as the result.
			</p>
            </div>
          </span>
        </div>
      </div>
      <p id="p-2177">
		Intuitively, graphs are <em class="terminology">isomorphic</em>  if they are basically the same, or better yet, if they are the same except for the names of the vertices. To make the concept of renaming vertices precise, we give the following definitions:
	</p>
      <article class="assemblage-like" id="assemblage-40">
        <h5 class="heading">Isomorphic Graphs</h5>
        <p id="p-2178">
			 An
			<em class="terminology">isomorphism</em> between two graphs \(G_1\) and \(G_2\) is a bijection \(f:V_1 \to V_2\) between the vertices of the graphs such that if \(\{a,b\}\) is an edge in \(G_1\) then \(\{f(a), f(b)\}\) is an edge in \(G_2\).
		</p>
        <p id="p-2179">
			Two graphs are
			<em class="terminology">isomorphic</em> if there is an isomorphism between them. In this case we write \(G_1 \isom G_2\).
		</p>
      </article>
      <p id="p-2180">
		An isomorphism is simply a function which renames the vertices. It must be a bijection so every vertex gets a new name. These newly named vertices must be connected by edges precisely if they were connected by edges with their old names.
	</p>
      <article class="example-like" id="example-108">
        <h5 class="heading">
          <span class="type">Example</span>
          <span class="codenumber">4.1.3</span>
        </h5>
        <p id="p-2181">
				Decide whether the graphs \(G_1 = \{V_1, E_1\}\) and \(G_2 = \{V_2, E_2\}\) are equal or isomorphic.
			</p>
        <p id="p-2182">
				\(V_1 = \{a,b,c,d\}\), \(E_1 = \{\{a,b\}, \{a,c\}, \{a,d\}, \{c,d\}\}\)
			</p>
        <p id="p-2183">
				\(V_2 = \{a,b,c,d\}\), \(E_2 = \{\{a,b\}, \{a,c\}, \{b,c\}, \{c,d\}\}\)
			</p>
      </article>
      <div class="posterior">
        <div>
          <span class="hidden-knowl-wrapper">
            <a knowl="" class="id-ref" refid="hk-solution-252" id="solution-252">
              <span class="">Solution</span>
            </a>
          </span>
          <span id="hk-solution-252" style="display: none;" class="tex2jax_ignore">
            <div class="remark-like"><p id="p-2184">
				The graphs are NOT equal, since \(\{a,d\} \in E_1\) but \(\{a,d\} \notin E_2\). However, since both graphs contain the same number of vertices and same number of edges, they <!--Style me with CSS--><em>might</em> be isomorphic (this is not enough in most cases, but it is a good start).
			</p><p id="p-2185">
				We can try to build an isomorphism. How about we say \(f(a) = b\), \(f(b) = c\), \(f(c) = d\) and \(f(d) = a\). This is definitely a bijection, but to make sure that the function is an isomorphism, we must make sure it <!--Style me with CSS--><em>respects the edge relation</em>. In \(G_1\), vertices \(a\) and \(b\) are connected by an edge. In \(G_2\), \(f(a) = b\) and \(f(b) = c\) are connected by an edge. So far, so good, but we must check the other three edges. The edges \(\{a,c\}\) in \(G_1\) corresponds to \(\{f(a), f(c)\} = \{b,d\}\), but here we have a problem. There is no edge between \(b\) and \(d\) in \(G_2\). Thus \(f\) is NOT an isomorphism.
			</p><p id="p-2186">
				Not all hope is lost, however. Just because \(f\) is not an isomorphism does not mean that there is no isomorphism at all. We can try again. At this point it might be helpful to draw the graphs to see how they should match up.

				<div class="sidebyside" style="" id="sidebyside-15"><div class="sbsrow" style="margin-left:13.5%;margin-right:13.5%;"><h5 class="sbsheader" style="width:31.5068493150685%;"/><h5 class="sbsheader" style="width:31.5068493150685%;"/></div><div class="sbsrow" style="margin-left:13.5%;margin-right:13.5%;"><div class="sbspanel" style="width:31.5068493150685%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-75.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:31.5068493150685%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-76.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div></div><div class="sbsrow" style="margin-left:13.5%;margin-right:13.5%;"><figcaption class="sbscaption" style="width:31.5068493150685%;"/><figcaption class="sbscaption" style="width:31.5068493150685%;"/></div></div>


				Alternatively, notice that in \(G_1\), the vertex \(a\) is adjacent to every other vertex. In \(G_2\), there is also a vertex with this property: \(c\). So build the bijection \(g:V_1 \to V_2\) by defining \(g(a) = c\) to start with. Next, where should we send \(b\)? In \(G_1\), the vertex \(b\) is only adjacent to vertex \(a\). There is exactly one vertex like this in \(G_2\), namely \(d\). So let \(g(b) = d\). As for the last two, in this example, we have a free choice: let \(g(c) = b\) and \(g(d) = a\) (switching these would be fine as well).
			</p><p id="p-2187">
				We should check that this really is an isomorphism. It is definitely a bijection. We must make sure that the edges are respected. The four edges in \(G_1\) are
				\begin{equation*}
					\{a,b\}, \{a,c\}, \{a,d\}, \{c,d\}
				\end{equation*}
			</p><p id="p-2188">
				Under the proposed isomorphism these become
				\begin{equation*}
					\{g(a), g(b)\}, \{g(a), g(c)\}, \{g(a), g(d)\}, \{g(c), g(d)\}
				\end{equation*}
			</p>\begin{equation*}
				\{c,d\}, \{c,b\}, \{c,a\}, \{b,a\}
			\end{equation*}<p id="p-2189">
				which are precisely the edges in \(G_2\). Thus \(g\) is an isomorphism, so \(G_1 \cong G_2\)
			</p></div>
          </span>
        </div>
      </div>
      <p id="p-2190">
		Sometimes we will talk about a graph with a special name (like \(K_n\) or the <!--Style me with CSS--><em>Peterson graph</em>) or perhaps draw a graph without any labels. In this case we are really referring to <!--Style me with CSS--><em>all</em> graphs isomorphic to any copy of that particular graph. A collection of isomorphic graphs is often called an <em class="terminology">isomorphism class</em>.<span class="hidden-knowl-wrapper"><a knowl="" class="id-ref" refid="hk-fn-11" id="fn-11"><span class="footnote"><sup> 1 </sup></span></a></span><span id="hk-fn-11" style="display: none;" class="tex2jax_ignore"><span class="footnote">This is not unlike geometry, where we might have more than one copy of a particular triangle. There instead of <!--Style me with CSS--><em>isomorphic</em> we say <!--Style me with CSS--><em>congruent</em>.</span></span>
	</p>
      <p id="p-2191">
	  There are other relationships between graphs that we care about, other than equality and being isomorphic.  For example, compare the following pair of graphs:

		<div class="sidebyside" style="" id="sidebyside-16"><div class="sbsrow" style="margin-left:15%;margin-right:15%;"><h5 class="sbsheader" style="width:28.5714285714286%;"/><h5 class="sbsheader" style="width:28.5714285714286%;"/></div><div class="sbsrow" style="margin-left:15%;margin-right:15%;"><div class="sbspanel" style="width:28.5714285714286%;justify-content:flex-start;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-77.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:28.5714285714286%;justify-content:flex-start;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-78.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div></div><div class="sbsrow" style="margin-left:15%;margin-right:15%;"><figcaption class="sbscaption" style="width:28.5714285714286%;"/><figcaption class="sbscaption" style="width:28.5714285714286%;"/></div></div>

		 These are definitely not isomorphic, but notice that the graph on the right looks like it might be part of the graph on the left.  Especially if we draw it like this:

		 <figure class="figure-like" id="figure-51"><object type="image/svg+xml" style="width:20%; margin:auto; display:block;" data="images/image-79.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></figure>
		 We would like to say that the smaller graph is a <!--Style me with CSS--><em>subgraph</em> of the larger.
	</p>
      <p id="p-2192">
	  We should give a careful definition of this.  In fact, there are two reasonable notions for what a subgroup should mean.
	</p>
      <article class="assemblage-like" id="assemblage-41">
        <h5 class="heading">Subgraphs</h5>
        <p id="p-2193">
		  We say that \(G_1 = (V_1, E_1)\) is a <em class="terminology">subgraph</em> of \(G_2 = (V_2, E_2)\) provided \(V_1 \subseteq V_2\) and \(E_1 \subseteq E_2\).
		</p>
        <p id="p-2194">
		  We say that \(G_1 = (V_1, E_1)\) is an <em class="terminology">induced subgraph</em> of \(G_2 = (V_2, E_2)\) provided \(V_1 \subseteq V_2\) and \(E_2\) contains all edges of \(E_1\) which are subsets of \(V_2\).
		</p>
      </article>
      <p id="p-2195"> Notice that every induced subgraph is also an ordinary subgraph, but not conversely.  Think of a subgraph as the result of deleting some vertices and edges from the larger graph.  For the subgraph to be an induced subgraph, we can still delete vertices, but now we only delete those edges that included the deleted vertices.
		</p>
      <article class="example-like" id="example-109">
        <h5 class="heading">
          <span class="type">Example</span>
          <span class="codenumber">4.1.4</span>
        </h5>
        <p id="p-2196"> Consider the graphs:
						<div class="sidebyside" style="" id="sidebyside-17"><div class="sbsrow" style="margin-left:3.5%;margin-right:3.5%;"><h5 class="sbsheader" style="width:19.3548387096774%;"/><h5 class="sbsheader" style="width:19.3548387096774%;"/><h5 class="sbsheader" style="width:19.3548387096774%;"/><h5 class="sbsheader" style="width:19.3548387096774%;"/></div><div class="sbsrow" style="margin-left:3.5%;margin-right:3.5%;"><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-80.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-81.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-82.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div><div class="sbspanel" style="width:19.3548387096774%;justify-content:flex-end;"><object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-83.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></div></div><div class="sbsrow" style="margin-left:3.5%;margin-right:3.5%;"><figcaption class="sbscaption" style="width:19.3548387096774%;"/><figcaption class="sbscaption" style="width:19.3548387096774%;"/><figcaption class="sbscaption" style="width:19.3548387096774%;"/><figcaption class="sbscaption" style="width:19.3548387096774%;"/></div></div>
				</p>
        <p id="p-2197">Here both \(G_2\) and \(G_3\) are subgraphs of \(G_1\).  But only \(G_2\) is an <!--Style me with CSS--><em>induced</em> subgraph.  Notice that every edge that exists in \(G_1\) that can (because its “endpoints” are still in the graph) still exists in \(G_2\) actually does.  In \(G_3\), the edge \(\{a,b\}\) is in \(E_1\) but not \(E_3\), even though vertices \(a\) and \(b\) are in \(V_3\).
				</p>
        <p id="p-2198">
				  The graph \(G_4\) is NOT a subgraph of \(G_1\), even though it looks like all we did is remove vertex \(e\).  The reason is that in \(E_4\) we have the edge \(\{c,f\}\) but this is not an element of \(E_1\), so we don't have the required 	\(E_4 \subseteq E_1\).
				</p>
      </article>
      <p id="p-2199">
		Back to some basic graph theory definitions. Notice that all the graphs we have drawn above have the property that no pair of vertices is connected more than once, and no vertex is connected to itself. Graphs like these are sometimes called <em class="terminology">simple</em>, although we will just call them <!--Style me with CSS--><em>graphs</em>. This is because our definition for a graph says that the edges form a set of 2-element subsets of the vertices. Remember that it doesn't make sense to say a set contains an element more than once. So no pair of vertices can be connected by an edge more than once. Also, since each edge must be a set containing two vertices, we cannot have a single vertex connected to itself by an edge.
	</p>
      <p id="p-2200">
		That said, there are times we want to consider double (or more) edges and single edge loops. For example, the “graph” we drew for the Bridges of Königsberg problem had double edges because there really are two bridges connecting a particular island to the near shore. We will call these objects <em class="terminology">multigraphs</em>. This is a good name: a <!--Style me with CSS--><em>multiset</em> is a set in which we are allowed to include a single element multiple times.
	</p>
      <p id="p-2201">
		The graphs above are also <em class="terminology">connected</em>: you can get from any vertex to any other vertex by following some path of edges. A graph that is not connected can be thought of as two separate graphs drawn close together. For example, the following graph is NOT connected because there is no path from \(a\) to \(b\):
		<figure class="figure-like" id="figure-52"><object type="image/svg+xml" style="width:33%; margin:auto; display:block;" data="images/ex-gt-non-connected.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></figure>
	 Most of the time, it makes sense to treat non-connected graphs as separate graphs (think of the above graph as two squares), so unless otherwise stated, we will assume all our graphs are connected.
	</p>
      <p id="p-2202">
		Vertices in a graph do not always have edges between them. If we add all possible edges, then the resulting graph is called <em class="terminology">complete</em>. That is, a graph is complete if every pair of vertices is connected by an edge. Since a graph is determined completely by which vertices are adjacent to which other vertices, there is only one complete graph with a given number of vertices. We give these a special name: \(K_n\) is the complete graph on \(n\) vertices.
	</p>
      <p id="p-2203">
		Each vertex in \(K_n\) is adjacent to \(n-1\) other vertices. We call the number of edges emanating from a given vertex the <em class="terminology">degree</em> of that vertex. So every vertex in \(K_n\) has degree \(n-1\). How many edges does \(K_n\) have? One might think the answer should be \(n(n-1)\), since we count \(n-1\) edges \(n\) times (once for each vertex). However, each edge is incident to 2 vertices, so we counted every edge exactly twice. Thus there are \(n(n-1)/2\) edges in \(K_n\). Alternatively, we can say there are \({n \choose 2}\) edges, since to draw an edge we must choose 2 of the \(n\) vertices.
	</p>
      <p id="p-2204">
		In general, if we know the degrees of all the vertices in a graph, we can find the number of edges. The sum of the degrees of all vertices will always be <!--Style me with CSS--><em>twice</em> the number of edges, since each edge adds to the degree of two vertices. Notice this means that the sum of the degrees of all vertices in any graph must be even!
	</p>
      <article class="example-like" id="example-110">
        <h5 class="heading">
          <span class="type">Example</span>
          <span class="codenumber">4.1.5</span>
        </h5>
        <p id="p-2205">
				At a recent math seminar, 9 mathematicians greeted each other by shaking hands. Is it possible that each mathematician shook hands with exactly 7 people at the seminar?
			</p>
      </article>
      <div class="posterior">
        <div>
          <span class="hidden-knowl-wrapper">
            <a knowl="" class="id-ref" refid="hk-solution-253" id="solution-253">
              <span class="">Solution</span>
            </a>
          </span>
          <span id="hk-solution-253" style="display: none;" class="tex2jax_ignore">
            <div class="remark-like">
              <p id="p-2206">
				It seems like this should be possible. Each mathematician chooses one person to not shake hands with. But this cannot happen. We are asking whether a graph with 9 vertices can have each vertex have degree 7. If such a graph existed, the sum of the degrees of the vertices would be \(9\cdot 7 = 63\). This would be twice the number of edges (handshakes) resulting in a graph with \(31.5\) edges. That is impossible. Thus at least one (in fact an odd number) of the mathematicians must have shaken hands with an <!--Style me with CSS--><em>even</em> number of people at the seminar.
			</p>
            </div>
          </span>
        </div>
      </div>
      <p id="p-2207">
		One final definition: we say a graph is <em class="terminology">bipartite</em> if the vertices can be divided into two sets, \(A\) and \(B\), with no two vertices in \(A\) adjacent and no two vertices in \(B\) adjacent. The vertices in \(A\) can be adjacent to some or all of the vertices in \(B\). If each vertex in \(A\) is adjacent to all the vertices in \(B\), then the graph is a <em class="terminology">complete bipartite graph</em>, and gets a special name: \(K_{m,n}\), where \(|A| = m\) and \(|B| = n\). The graph in the houses and utilities puzzle is \(K_{3,3}\).
	</p>
      <article class="assemblage-like" id="assemblage-42">
        <h5 class="heading">Named Graphs</h5>
        <p id="p-2208">
			Some graphs are used more than others, and get special names.
		<dl class="description-list-narrow"><dt id="li-1171">\(K_n\)</dt><dd> The complete graph on \(n\) vertices.</dd><dt id="li-1172">\(K_{m,n}\)</dt><dd> The complete bipartite graph with sets of \(m\) and \(n\) vertices.</dd><dt id="li-1173">\(C_n\)</dt><dd> The cycle on \(n\) vertices, just one big loop.</dd><dt id="li-1174">\(P_n\)</dt><dd> The path on \(n\) vertices, just one long path.</dd></dl>
	</p>
        <div class="sidebyside" style="" id="sidebyside-18">
          <div class="sbsrow" style="margin-left:2.875%;margin-right:2.875%;">
            <h5 class="sbsheader" style="width:19.0981432360743%;"/>
            <h5 class="sbsheader" style="width:21.2201591511936%;"/>
            <h5 class="sbsheader" style="width:15.9151193633952%;"/>
            <h5 class="sbsheader" style="width:25.4641909814324%;"/>
          </div>
          <div class="sbsrow" style="margin-left:2.875%;margin-right:2.875%;">
            <div class="sbspanel" style="width:19.0981432360743%;justify-content:flex-end;">
              <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-85.svg" alt="">
                <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
              </object>
            </div>
            <div class="sbspanel" style="width:21.2201591511936%;justify-content:flex-end;">
              <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-86.svg" alt="">
                <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
              </object>
            </div>
            <div class="sbspanel" style="width:15.9151193633952%;justify-content:flex-end;">
              <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-87.svg" alt="">
                <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
              </object>
            </div>
            <div class="sbspanel" style="width:25.4641909814324%;justify-content:flex-end;">
              <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-88.svg" alt="">
                <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
              </object>
            </div>
          </div>
          <div class="sbsrow" style="margin-left:2.875%;margin-right:2.875%;">
            <figcaption class="sbscaption" style="width:19.0981432360743%;"/>
            <figcaption class="sbscaption" style="width:21.2201591511936%;"/>
            <figcaption class="sbscaption" style="width:15.9151193633952%;"/>
            <figcaption class="sbscaption" style="width:25.4641909814324%;"/>
          </div>
        </div>
      </article>
      <p id="p-2209">
  There are a lot of definitions to keep track of in graph theory.  Here is a glossary of the terms we have already used and will soon encounter.
</p>
      <article class="assemblage-like" id="assemblage-43">
        <h5 class="heading">Graph Theory Definitions</h5>
        <p id="p-2210">
			<dl class="description-list"><dt id="li-1175">Graph</dt><dd><p id="p-2211"> A collection of
						<em class="terminology">vertices</em>, some of which are connected by
						<em class="terminology">edges</em>. More precisely, a pair of sets \(V\) and \(E\) where \(V\) is a set of vertices and \(E\) is a set of 2-element subsets of \(V\).</p></dd><dt id="li-1176">Adjacent</dt><dd><p id="p-2212"> Two vertices are
						<em class="terminology">adjacent</em> if they are connected by an edge. Two edges are
						<em class="terminology">adjacent</em> if they share a vertex.</p></dd><dt id="li-1177">Bipartite graph</dt><dd><p id="p-2213"> A graph for which it is possible to divide the vertices into two disjoint sets such that there are no edges between any two vertices in the same set.</p></dd><dt id="li-1178">Complete bipartite graph</dt><dd><p id="p-2214">A bipartite graph for which every vertex in the first set is adjacent to every vertex in the second set.</p></dd><dt id="li-1179">Complete graph</dt><dd><p id="p-2215"> A graph in which every pair of vertices is adjacent.</p></dd><dt id="li-1180">Connected</dt><dd><p id="p-2216"> A graph is
						<em class="terminology">connected</em> if there is a path from any vertex to any other vertex.
					</p></dd><dt id="li-1181">Chromatic number</dt><dd><p id="p-2217"> The minimum number of colors required in a proper vertex coloring of the graph.
					</p></dd><dt id="li-1182">Cycle</dt><dd><p id="p-2218"> A path (see below) that starts and stops at the same vertex, but contains no other repeated vertices.</p></dd><dt id="li-1183">Degree of a vertex</dt><dd><p id="p-2219"> The number of edges incident to a vertex.</p></dd><dt id="li-1184">Euler path</dt><dd><p id="p-2220">A walk which uses each edge exactly once.
					</p></dd><dt id="li-1185">Euler circuit</dt><dd><p id="p-2221"> An Euler path which starts and stops at the same vertex.</p></dd><dt id="li-1186">Multigraph</dt><dd><p id="p-2222"> A
						<em class="terminology">multigraph</em> is just like a graph but can contain multiple edges between two vertices as well as single edge loops (that is an edge from a vertex to itself).</p></dd><dt id="li-1187">Planar</dt><dd><p id="p-2223"> A graph which can be drawn (in the plane) without any edges crossing.</p></dd><dt id="li-1188">Subgraph</dt><dd><p id="p-2224"> We say that \(H\) is a
						<em class="terminology">subgraph</em> of \(G\) if every vertex and edge of \(H\) is also a vertex or edge of \(G\). We say \(H\) is an
						<em class="terminology">induced</em> subgraph of \(G\) if every vertex of \(H\) is a vertex of \(G\) and each pair of vertices in \(H\) are adjacent in \(H\) if and only if they are adjacent in \(G\).</p></dd><dt id="li-1189">Tree</dt><dd><p id="p-2225"> A (connected) graph with no cycles. (A non-connected graph with no cycles is called a
						<em class="terminology">forest</em>.) The vertices in a tree with degree 1 are called
						<em class="terminology">leaves</em>.</p></dd><dt id="li-1190">Vertex coloring</dt><dd><p id="p-2226"> An assignment of colors to each of the vertices of a graph. A vertex coloring is
						<em class="terminology">proper</em> if adjacent vertices are always colored differently.</p></dd><dt id="li-1191">Walk</dt><dd><p id="p-2227"> A sequence of vertices such that consecutive vertices (in the sequence) are adjacent (in the graph). A walk in which no vertex is repeated is called
						<em class="terminology">simple</em>.</p></dd></dl>
		</p>
      </article>
      <section class="exercises" id="exercises_gt-intro">
        <header>
          <h1>Exercises 4.1 Exercises</h1>
        </header>
        <article class="exercise-like" id="exercise-272">
          <h5 class="heading">
            <span class="codenumber">1</span>
          </h5>
          <p id="p-2228">
			If 10 people each shake hands with each other, how many handshakes took place? What does this question have to do with graph theory?
		</p>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-273">
          <h5 class="heading">
            <span class="codenumber">2</span>
          </h5>
          <p id="p-2230">
			Among a group of 5 people, is it possible for everyone to be friends with exactly 2 of the people in the group? What about 3 of the people in the group?
		</p>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-274">
          <h5 class="heading">
            <span class="codenumber">3</span>
          </h5>
          <p id="p-2232">
			Is it possible for two <!--Style me with CSS--><em>different</em> (non-isomorphic) graphs to have the same number of vertices and the same number of edges? What if the degrees of the vertices in the two graphs are the same (so both graphs have vertices with degrees 1, 2, 2, 3, and 4, for example)? Draw two such graphs or explain why not.
		</p>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-275">
          <h5 class="heading">
            <span class="codenumber">4</span>
          </h5>
          <p id="p-2234">
			Are the two graphs below equal? Are they isomorphic? If they are isomorphic, give the isomorphism.  If not, explain.
		</p>
          <p id="p-2235">
			Graph 1: \(V = \{a,b,c,d,e\}\), \(E = \{\{a,b\}, \{a,c\}, \{a,e\}, \{b,d\}, \{b,e\}, \{c,e\}\}\).
		</p>
          <p id="p-2236">
			Graph 2:
			<object type="image/svg+xml" style="width:25%; margin:auto; display:block;" data="images/image-91.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object>

		</p>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-276">
          <h5 class="heading">
            <span class="codenumber">5</span>
          </h5>
          <p id="p-2238">
			Consider the following two graphs:
		<dl class="description-list-narrow"><dt id="li-1192">\(G_1\)</dt><dd><p id="p-2239">\(V_1=\{a,b,c,d,e,f,g\}\)</p><p id="p-2240">\(E_1=\{\{a,b\},\{a,d\},\{b,c\},\{b,d\},\{b,e\},\{b,f\},\{c,g\},\{d,e\},\)</p><p id="p-2241">\(\{e,f\},\{f,g\}\}\).</p></dd><dt id="li-1193">\(G_2\)</dt><dd><p id="p-2242">\(V_2=\{v_1,v_2,v_3,v_4,v_5,v_6,v_7\}\),</p><p id="p-2243">
					\(E_2=\{\{v_1,v_4\},\{v_1,v_5\},\{v_1,v_7\},\{v_2,v_3\},\{v_2,v_6\},\)</p><p id="p-2244">
					\(\{v_3,v_5\},\{v_3,v_7\},\{v_4,v_5\},\{v_5,v_6\},\{v_5,v_7\}\}\)
				</p></dd></dl>
	</p>
          <p id="p-2245">
		<ol style="list-style-type: lower-alpha;"><li id="li-1194"><p id="p-2246">
					Let \(f:G_1 \rightarrow G_2\) be a function that takes the vertices of Graph 1 to vertices of Graph 2. The function is given by the following table:
					<figure class="figure-like" id="table-41"><table><tr><td class="l m b1 r1 l0 t0">\(x\)</td><td class="l m b1 r0 l0 t0">\(a\)</td><td class="l m b1 r0 l0 t0">\(b\)</td><td class="l m b1 r0 l0 t0">\(c\)</td><td class="l m b1 r0 l0 t0">\(d\)</td><td class="l m b1 r0 l0 t0">\(e\)</td><td class="l m b1 r0 l0 t0">\(f\)</td><td class="l m b1 r0 l0 t0">\(g\)</td></tr><tr><td class="l m b0 r1 l0 t0">\(f(x)\)</td><td class="l m b0 r0 l0 t0">\(v_4\)</td><td class="l m b0 r0 l0 t0">\(v_5\)</td><td class="l m b0 r0 l0 t0">\(v_1\)</td><td class="l m b0 r0 l0 t0">\(v_6\)</td><td class="l m b0 r0 l0 t0">\(v_2\)</td><td class="l m b0 r0 l0 t0">\(v_3\)</td><td class="l m b0 r0 l0 t0">\(v_7\)</td></tr></table></figure>
					Does \(f\) define an isomorphism between Graph 1 and Graph 2? Explain.

					
				</p></li><li id="li-1195"><p id="p-2247">
					Define a new function \(g\) (with \(g\not=f\)) that defines an isomorphism between Graph 1 and Graph 2.

					
				</p></li><li id="li-1196"><p id="p-2248">
					Is the graph pictured below isomorphic to Graph 1 and Graph 2? Explain.
					<figure class="figure-like" id="figure-53"><object type="image/svg+xml" style="width:20%; margin:auto; display:block;" data="images/image-92.svg" alt=""><p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p></object></figure>
					
				</p></li></ol></p>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-277">
          <h5 class="heading">
            <span class="codenumber">6</span>
          </h5>
          <p id="p-2249">
			Which of the graphs below are bipartite?  Justify your answers.
		</p>
          <div class="sidebyside" style="" id="sidebyside-20">
            <div class="sbsrow" style="margin-left:2.5%;margin-right:2.5%;">
              <h5 class="sbsheader" style="width:21.0526315789474%;"/>
              <h5 class="sbsheader" style="width:21.0526315789474%;"/>
              <h5 class="sbsheader" style="width:21.0526315789474%;"/>
              <h5 class="sbsheader" style="width:21.0526315789474%;"/>
            </div>
            <div class="sbsrow" style="margin-left:2.5%;margin-right:2.5%;">
              <div class="sbspanel" style="width:21.0526315789474%;justify-content:center;">
                <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-93.svg" alt="">
                  <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
                </object>
              </div>
              <div class="sbspanel" style="width:21.0526315789474%;justify-content:center;">
                <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-94.svg" alt="">
                  <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
                </object>
              </div>
              <div class="sbspanel" style="width:21.0526315789474%;justify-content:center;">
                <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-95.svg" alt="">
                  <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
                </object>
              </div>
              <div class="sbspanel" style="width:21.0526315789474%;justify-content:center;">
                <object type="image/svg+xml" style="width:100%; margin:auto; display:block;" data="images/image-96.svg" alt="">
                  <p style="margin:auto">&lt;&lt;SVG image is unavailable, or your browser cannot render it&gt;&gt;</p>
                </object>
              </div>
            </div>
            <div class="sbsrow" style="margin-left:2.5%;margin-right:2.5%;">
              <figcaption class="sbscaption" style="width:21.0526315789474%;"/>
              <figcaption class="sbscaption" style="width:21.0526315789474%;"/>
              <figcaption class="sbscaption" style="width:21.0526315789474%;"/>
              <figcaption class="sbscaption" style="width:21.0526315789474%;"/>
            </div>
          </div>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-278">
          <h5 class="heading">
            <span class="codenumber">7</span>
          </h5>
          <p id="p-2251">
			For which \(n \ge 3\) is the graph \(C_n\) bipartite?
		</p>
        </article>
        <div class="hidden-knowl-wrapper"/>
        <article class="exercise-like" id="exercise-279">
          <h5 class="heading">
            <span class="codenumber">8</span>
          </h5>
          <p id="p-2252">
			For each of the following, try to give two different unlabeled graphs with the given properties, or explain why doing so is impossible.
		<ol style="list-style-type: lower-alpha;"><li id="li-1197"><p id="p-2253">
					Two different trees with the same number of vertices and the same number of edges. A tree is a connected graph with no cycles.
				</p></li><li id="li-1198"><p id="p-2254">
					Two different graphs with 8 vertices all of degree 2.
				</p></li><li id="li-1199"><p id="p-2255">
					Two different graphs with 5 vertices all of degree 4.
				</p></li><li id="li-1200"><p id="p-2256">
					Two different graphs with 5 vertices all of degree 3.
				</p></li></ol>
	</p>
        </article>
        <div class="hidden-knowl-wrapper"/>
      </section>
    </section>
  </body>
</html>
