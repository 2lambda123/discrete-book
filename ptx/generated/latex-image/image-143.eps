%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.63.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 121 648 227 727
%%HiResBoundingBox: 121 648 227 727
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
121 648 106 79 re
W
q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 153.987 684.52] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
-19.84267 19.84267 m
-29.764 29.764 l
-19.84267 19.84267 m
-17.85828 39.68535 l
-19.84267 19.84267 m
-3.96846 9.92133 l
-19.84267 19.84267 m
-9.92133 3.96846 l
S
q
-17.85011 19.84267 m
-17.85011 20.94313 -18.74219 21.83522 -19.84267 21.83522 c
-20.94313 21.83522 -21.83522 20.94313 -21.83522 19.84267 c
-21.83522 18.74219 -20.94313 17.85011 -19.84267 17.85011 c
-18.74219 17.85011 -17.85011 18.74219 -17.85011 19.84267 c
h
f
q
[1 0 0 1 -19.843 19.843] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 19.843 -19.843] cm
Q
Q
q
q
[1 0 0 1 -19.843 26.136] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 19.843 -26.136] cm
Q
Q
q
-27.77145 29.764 m
-27.77145 30.86447 -28.66353 31.75656 -29.764 31.75656 c
-30.86447 31.75656 -31.75656 30.86447 -31.75656 29.764 c
-31.75656 28.66353 -30.86447 27.77145 -29.764 27.77145 c
-28.66353 27.77145 -27.77145 28.66353 -27.77145 29.764 c
h
f
q
[1 0 0 1 -29.764 29.764] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 29.764 -29.764] cm
Q
Q
q
q
[1 0 0 1 -29.764 36.057] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 29.764 -36.057] cm
Q
Q
q
-15.86572 39.68535 m
-15.86572 40.78583 -16.7578 41.6779 -17.85828 41.6779 c
-18.95874 41.6779 -19.85083 40.78583 -19.85083 39.68535 c
-19.85083 38.58488 -18.95874 37.6928 -17.85828 37.6928 c
-16.7578 37.6928 -15.86572 38.58488 -15.86572 39.68535 c
h
f
q
[1 0 0 1 -17.858 39.685] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 17.858 -39.685] cm
Q
Q
q
q
[1 0 0 1 -17.858 45.978] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 17.858 -45.978] cm
Q
Q
q
-1.9759 9.92133 m
-1.9759 11.02179 -2.86798 11.91388 -3.96846 11.91388 c
-5.06892 11.91388 -5.96101 11.02179 -5.96101 9.92133 c
-5.96101 8.82085 -5.06892 7.92877 -3.96846 7.92877 c
-2.86798 7.92877 -1.9759 8.82085 -1.9759 9.92133 c
h
f
q
[1 0 0 1 -3.969 9.921] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 3.969 -9.921] cm
Q
Q
q
q
[1 0 0 1 -3.969 16.214] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 3.969 -16.214] cm
Q
Q
q
-7.92877 3.96846 m
-7.92877 5.06892 -8.82085 5.96101 -9.92133 5.96101 c
-11.02179 5.96101 -11.91388 5.06892 -11.91388 3.96846 c
-11.91388 2.86798 -11.02179 1.9759 -9.92133 1.9759 c
-8.82085 1.9759 -7.92877 2.86798 -7.92877 3.96846 c
h
f
q
[1 0 0 1 -9.921 3.969] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 9.921 -3.969] cm
Q
Q
q
q
[1 0 0 1 -9.921 10.261] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 9.921 -10.261] cm
Q
Q
-19.84267 19.84267 m
19.84267 19.84267 l
9.92133 25.79553 l
19.84267 19.84267 m
19.84267 39.68535 l
19.84267 19.84267 m
29.764 25.79553 l
19.84267 19.84267 m
29.764 19.84267 l
S
q
21.83522 19.84267 m
21.83522 20.94313 20.94313 21.83522 19.84267 21.83522 c
18.74219 21.83522 17.85011 20.94313 17.85011 19.84267 c
17.85011 18.74219 18.74219 17.85011 19.84267 17.85011 c
20.94313 17.85011 21.83522 18.74219 21.83522 19.84267 c
h
f
q
[1 0 0 1 19.842 19.843] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -19.842 -19.843] cm
Q
Q
q
q
[1 0 0 1 19.843 26.136] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -19.843 -26.136] cm
Q
Q
q
11.91388 25.79553 m
11.91388 26.896 11.02179 27.78809 9.92133 27.78809 c
8.82085 27.78809 7.92877 26.896 7.92877 25.79553 c
7.92877 24.69505 8.82085 23.80298 9.92133 23.80298 c
11.02179 23.80298 11.91388 24.69505 11.91388 25.79553 c
h
f
q
[1 0 0 1 9.921 25.795] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -9.921 -25.795] cm
Q
Q
q
q
[1 0 0 1 9.921 32.088] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -9.921 -32.088] cm
Q
Q
q
21.83522 39.68535 m
21.83522 40.78583 20.94313 41.6779 19.84267 41.6779 c
18.74219 41.6779 17.85011 40.78583 17.85011 39.68535 c
17.85011 38.58488 18.74219 37.6928 19.84267 37.6928 c
20.94313 37.6928 21.83522 38.58488 21.83522 39.68535 c
h
f
q
[1 0 0 1 19.842 39.685] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -19.842 -39.685] cm
Q
Q
q
q
[1 0 0 1 19.843 45.978] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -19.843 -45.978] cm
Q
Q
q
31.75656 25.79553 m
31.75656 26.896 30.86447 27.78809 29.764 27.78809 c
28.66353 27.78809 27.77145 26.896 27.77145 25.79553 c
27.77145 24.69505 28.66353 23.80298 29.764 23.80298 c
30.86447 23.80298 31.75656 24.69505 31.75656 25.79553 c
h
f
q
[1 0 0 1 29.764 25.795] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -29.764 -25.795] cm
Q
Q
q
q
[1 0 0 1 29.764 32.088] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -29.764 -32.088] cm
Q
Q
q
31.75656 19.84267 m
31.75656 20.94313 30.86447 21.83522 29.764 21.83522 c
28.66353 21.83522 27.77145 20.94313 27.77145 19.84267 c
27.77145 18.74219 28.66353 17.85011 29.764 17.85011 c
30.86447 17.85011 31.75656 18.74219 31.75656 19.84267 c
h
f
q
[1 0 0 1 29.764 19.842] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -29.764 -19.842] cm
Q
Q
q
q
[1 0 0 1 29.764 26.135] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -29.764 -26.135] cm
Q
Q
19.84267 19.84267 m
0 0 l
-3.96846 -19.84267 l
0 0 m
3.96846 -19.84267 l
0 0 m
39.68535 0 l
39.68535 19.84267 l
49.60667 29.764 l
39.68535 19.84267 m
47.62228 21.82706 l
S
q
1.99255 0 m
1.99255 1.10046 1.10046 1.99255 0 1.99255 c
-1.10046 1.99255 -1.99255 1.10046 -1.99255 0 c
-1.99255 -1.10046 -1.10046 -1.99255 0 -1.99255 c
1.10046 -1.99255 1.99255 -1.10046 1.99255 0 c
h
f
q
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
Q
Q
q
q
[1 0 0 1 0 6.293] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 0 -6.293] cm
Q
Q
q
-1.9759 -19.84267 m
-1.9759 -18.74219 -2.86798 -17.85011 -3.96846 -17.85011 c
-5.06892 -17.85011 -5.96101 -18.74219 -5.96101 -19.84267 c
-5.96101 -20.94313 -5.06892 -21.83522 -3.96846 -21.83522 c
-2.86798 -21.83522 -1.9759 -20.94313 -1.9759 -19.84267 c
h
f
q
[1 0 0 1 -3.968 -19.842] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 3.968 19.842] cm
Q
Q
q
q
[1 0 0 1 -3.968 -13.55] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 3.968 13.55] cm
Q
Q
q
5.96101 -19.84267 m
5.96101 -18.74219 5.06892 -17.85011 3.96846 -17.85011 c
2.86798 -17.85011 1.9759 -18.74219 1.9759 -19.84267 c
1.9759 -20.94313 2.86798 -21.83522 3.96846 -21.83522 c
5.06892 -21.83522 5.96101 -20.94313 5.96101 -19.84267 c
h
f
q
[1 0 0 1 3.968 -19.842] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -3.968 19.842] cm
Q
Q
q
q
[1 0 0 1 3.968 -13.55] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -3.968 13.55] cm
Q
Q
q
41.6779 0 m
41.6779 1.10046 40.78583 1.99255 39.68535 1.99255 c
38.58488 1.99255 37.6928 1.10046 37.6928 0 c
37.6928 -1.10046 38.58488 -1.99255 39.68535 -1.99255 c
40.78583 -1.99255 41.6779 -1.10046 41.6779 0 c
h
f
q
[1 0 0 1 39.685 0] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.685 0] cm
Q
Q
q
q
[1 0 0 1 39.686 6.293] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.686 -6.293] cm
Q
Q
q
41.6779 19.84267 m
41.6779 20.94313 40.78583 21.83522 39.68535 21.83522 c
38.58488 21.83522 37.6928 20.94313 37.6928 19.84267 c
37.6928 18.74219 38.58488 17.85011 39.68535 17.85011 c
40.78583 17.85011 41.6779 18.74219 41.6779 19.84267 c
h
f
q
[1 0 0 1 39.685 19.842] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.685 -19.842] cm
Q
Q
q
q
[1 0 0 1 39.686 26.135] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.686 -26.135] cm
Q
Q
q
51.59923 29.764 m
51.59923 30.86447 50.70715 31.75656 49.60667 31.75656 c
48.50621 31.75656 47.61412 30.86447 47.61412 29.764 c
47.61412 28.66353 48.50621 27.77145 49.60667 27.77145 c
50.70715 27.77145 51.59923 28.66353 51.59923 29.764 c
h
f
q
[1 0 0 1 49.606 29.764] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -49.606 -29.764] cm
Q
Q
q
q
[1 0 0 1 49.607 36.057] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -49.607 -36.057] cm
Q
Q
q
49.61484 21.82706 m
49.61484 22.92752 48.72276 23.81961 47.62228 23.81961 c
46.52182 23.81961 45.62973 22.92752 45.62973 21.82706 c
45.62973 20.72658 46.52182 19.8345 47.62228 19.8345 c
48.72276 19.8345 49.61484 20.72658 49.61484 21.82706 c
h
f
q
[1 0 0 1 47.622 21.827] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -47.622 -21.827] cm
Q
Q
q
q
[1 0 0 1 47.623 28.12] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -47.623 -28.12] cm
Q
Q
39.68535 0 m
39.68535 -19.84267 l
47.62228 -9.92133 l
39.68535 -19.84267 m
47.62228 -27.77962 l
39.68535 -19.84267 m
39.68535 -33.73247 l
39.68535 -19.84267 m
31.74838 -27.77962 l
39.68535 -19.84267 m
31.74838 -11.90572 l
S
q
41.6779 -19.84267 m
41.6779 -18.74219 40.78583 -17.85011 39.68535 -17.85011 c
38.58488 -17.85011 37.6928 -18.74219 37.6928 -19.84267 c
37.6928 -20.94313 38.58488 -21.83522 39.68535 -21.83522 c
40.78583 -21.83522 41.6779 -20.94313 41.6779 -19.84267 c
h
f
q
[1 0 0 1 39.685 -19.842] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.685 19.842] cm
Q
Q
q
q
[1 0 0 1 39.686 -13.55] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.686 13.55] cm
Q
Q
q
49.61484 -9.92133 m
49.61484 -8.82085 48.72276 -7.92877 47.62228 -7.92877 c
46.52182 -7.92877 45.62973 -8.82085 45.62973 -9.92133 c
45.62973 -11.02179 46.52182 -11.91388 47.62228 -11.91388 c
48.72276 -11.91388 49.61484 -11.02179 49.61484 -9.92133 c
h
f
q
[1 0 0 1 47.622 -9.921] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -47.622 9.921] cm
Q
Q
q
q
[1 0 0 1 47.623 -3.629] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -47.623 3.629] cm
Q
Q
q
49.61484 -27.77962 m
49.61484 -26.67914 48.72276 -25.78706 47.62228 -25.78706 c
46.52182 -25.78706 45.62973 -26.67914 45.62973 -27.77962 c
45.62973 -28.88008 46.52182 -29.77217 47.62228 -29.77217 c
48.72276 -29.77217 49.61484 -28.88008 49.61484 -27.77962 c
h
f
q
[1 0 0 1 47.622 -27.779] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -47.622 27.779] cm
Q
Q
q
q
[1 0 0 1 47.623 -21.487] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -47.623 21.487] cm
Q
Q
q
41.6779 -33.73247 m
41.6779 -32.632 40.78583 -31.73991 39.68535 -31.73991 c
38.58488 -31.73991 37.6928 -32.632 37.6928 -33.73247 c
37.6928 -34.83293 38.58488 -35.72502 39.68535 -35.72502 c
40.78583 -35.72502 41.6779 -34.83293 41.6779 -33.73247 c
h
f
q
[1 0 0 1 39.685 -33.732] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.685 33.732] cm
Q
Q
q
q
[1 0 0 1 39.686 -27.44] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -39.686 27.44] cm
Q
Q
q
33.74094 -27.77962 m
33.74094 -26.67914 32.84885 -25.78706 31.74838 -25.78706 c
30.6479 -25.78706 29.75583 -26.67914 29.75583 -27.77962 c
29.75583 -28.88008 30.6479 -29.77217 31.74838 -29.77217 c
32.84885 -29.77217 33.74094 -28.88008 33.74094 -27.77962 c
h
f
q
[1 0 0 1 31.748 -27.779] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -31.748 27.779] cm
Q
Q
q
q
[1 0 0 1 31.749 -21.487] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -31.749 21.487] cm
Q
Q
q
33.74094 -11.90572 m
33.74094 -10.80524 32.84885 -9.91316 31.74838 -9.91316 c
30.6479 -9.91316 29.75583 -10.80524 29.75583 -11.90572 c
29.75583 -13.00618 30.6479 -13.89827 31.74838 -13.89827 c
32.84885 -13.89827 33.74094 -13.00618 33.74094 -11.90572 c
h
f
q
[1 0 0 1 31.748 -11.906] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -31.748 11.906] cm
Q
Q
q
q
[1 0 0 1 31.749 -5.613] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -31.749 5.613] cm
Q
Q
39.68535 0 m
59.52802 19.84267 l
59.52802 29.764 l
69.44937 39.68535 l
59.52802 19.84267 m
59.52802 9.92133 l
69.44937 0 l
S
q
61.52057 19.84267 m
61.52057 20.94313 60.6285 21.83522 59.52802 21.83522 c
58.42755 21.83522 57.53546 20.94313 57.53546 19.84267 c
57.53546 18.74219 58.42755 17.85011 59.52802 17.85011 c
60.6285 17.85011 61.52057 18.74219 61.52057 19.84267 c
h
f
q
[1 0 0 1 59.527 19.842] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -59.527 -19.842] cm
Q
Q
q
q
[1 0 0 1 59.528 26.135] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -59.528 -26.135] cm
Q
Q
q
61.52057 29.764 m
61.52057 30.86447 60.6285 31.75656 59.52802 31.75656 c
58.42755 31.75656 57.53546 30.86447 57.53546 29.764 c
57.53546 28.66353 58.42755 27.77145 59.52802 27.77145 c
60.6285 27.77145 61.52057 28.66353 61.52057 29.764 c
h
f
q
[1 0 0 1 59.527 29.764] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -59.527 -29.764] cm
Q
Q
q
q
[1 0 0 1 59.528 36.057] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -59.528 -36.057] cm
Q
Q
q
71.44193 39.68535 m
71.44193 40.78583 70.54984 41.6779 69.44937 41.6779 c
68.34889 41.6779 67.45682 40.78583 67.45682 39.68535 c
67.45682 38.58488 68.34889 37.6928 69.44937 37.6928 c
70.54984 37.6928 71.44193 38.58488 71.44193 39.68535 c
h
f
q
[1 0 0 1 69.448 39.685] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -69.448 -39.685] cm
Q
Q
q
q
[1 0 0 1 69.45 45.978] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -69.45 -45.978] cm
Q
Q
q
61.52057 9.92133 m
61.52057 11.02179 60.6285 11.91388 59.52802 11.91388 c
58.42755 11.91388 57.53546 11.02179 57.53546 9.92133 c
57.53546 8.82085 58.42755 7.92877 59.52802 7.92877 c
60.6285 7.92877 61.52057 8.82085 61.52057 9.92133 c
h
f
q
[1 0 0 1 59.527 9.921] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -59.527 -9.921] cm
Q
Q
q
q
[1 0 0 1 59.528 16.214] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -59.528 -16.214] cm
Q
Q
q
71.44193 0 m
71.44193 1.10046 70.54984 1.99255 69.44937 1.99255 c
68.34889 1.99255 67.45682 1.10046 67.45682 0 c
67.45682 -1.10046 68.34889 -1.99255 69.44937 -1.99255 c
70.54984 -1.99255 71.44193 -1.10046 71.44193 0 c
h
f
q
[1 0 0 1 69.448 0] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -69.448 0] cm
Q
Q
q
q
[1 0 0 1 69.45 6.293] cm
[1 0 0 1 0 0] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
Q
[1 0 0 1 -69.45 -6.293] cm
Q
Q
Q
Q
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
